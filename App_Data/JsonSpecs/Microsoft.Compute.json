[
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{name}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "platformUpdateDomainCount": "(integer)",
                "platformFaultDomainCount": "(integer)",
                "virtualMachines": [
                    {
                        "id": "(string)"
                    }
                ],
                "statuses": [
                    {
                        "code": "(string)",
                        "level": "(string)",
                        "displayStatus": "(string)",
                        "message": "(string)",
                        "time": "(string)"
                    }
                ],
                "managed": "(boolean)"
            },
            "sku": {
                "name": "(string)",
                "tier": "(string)",
                "capacity": "(integer)"
            }
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "platformUpdateDomainCount": "Update Domain count.",
                "platformFaultDomainCount": "Fault Domain count.",
                "virtualMachines": [
                    {
                        "id": "Resource Id"
                    }
                ],
                "statuses": [
                    {
                        "code": "The status code.",
                        "level": "The level code.",
                        "displayStatus": "The short localizable label for the status.",
                        "message": "The detailed status message, including for alerts and error messages.",
                        "time": "The time of the status."
                    }
                ],
                "managed": "If the availability set supports managed disks."
            },
            "sku": {
                "name": "The sku name.",
                "tier": "The sku tier.",
                "capacity": "The sku capacity."
            }
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}/vmSizes",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions/{version}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "forceUpdateTag": "(string)",
                "publisher": "(string)",
                "type": "(string)",
                "typeHandlerVersion": "(string)",
                "autoUpgradeMinorVersion": "(boolean)",
                "settings": {},
                "protectedSettings": {},
                "provisioningState": "(string)",
                "instanceView": {
                    "name": "(string)",
                    "type": "(string)",
                    "typeHandlerVersion": "(string)",
                    "substatuses": [
                        {
                            "code": "(string)",
                            "level": "(string)",
                            "displayStatus": "(string)",
                            "message": "(string)",
                            "time": "(string)"
                        }
                    ],
                    "statuses": [
                        {
                            "code": "(string)",
                            "level": "(string)",
                            "displayStatus": "(string)",
                            "message": "(string)",
                            "time": "(string)"
                        }
                    ]
                }
            }
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "forceUpdateTag": "How the extension handler should be forced to update even if the extension configuration has not changed.",
                "publisher": "The name of the extension handler publisher.",
                "type": "The type of the extension handler.",
                "typeHandlerVersion": "The type version of the extension handler.",
                "autoUpgradeMinorVersion": "Whether the extension handler should be automatically upgraded across minor versions.",
                "settings": {},
                "protectedSettings": {},
                "provisioningState": "The provisioning state, which only appears in the response.",
                "instanceView": {
                    "name": "The virtual machine extension name.",
                    "type": "The full type of the extension handler which includes both publisher and type.",
                    "typeHandlerVersion": "The type version of the extension handler.",
                    "substatuses": [
                        {
                            "code": "The status code.",
                            "level": "The level code.",
                            "displayStatus": "The short localizable label for the status.",
                            "message": "The detailed status message, including for alerts and error messages.",
                            "time": "The time of the status."
                        }
                    ],
                    "statuses": [
                        {
                            "code": "The status code.",
                            "level": "The level code.",
                            "displayStatus": "The short localizable label for the status.",
                            "message": "The detailed status message, including for alerts and error messages.",
                            "time": "The time of the status."
                        }
                    ]
                }
            }
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions/{version}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/usages",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/vmSizes",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "sourceVirtualMachine": {
                    "id": "(string)"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "(string)",
                        "osState": "(string)",
                        "snapshot": {
                            "id": "(string)"
                        },
                        "managedDisk": {
                            "id": "(string)"
                        },
                        "blobUri": "(string)",
                        "caching": "(string)",
                        "diskSizeGB": "(integer)"
                    },
                    "dataDisks": [
                        {
                            "lun": "(integer)",
                            "snapshot": {
                                "id": "(string)"
                            },
                            "managedDisk": {
                                "id": "(string)"
                            },
                            "blobUri": "(string)",
                            "caching": "(string)",
                            "diskSizeGB": "(integer)"
                        }
                    ]
                },
                "provisioningState": "(string)"
            }
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "sourceVirtualMachine": {
                    "id": "Resource Id"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "The Operating System type.",
                        "osState": "The OS State.",
                        "snapshot": {
                            "id": "Resource Id"
                        },
                        "managedDisk": {
                            "id": "Resource Id"
                        },
                        "blobUri": "The Virtual Hard Disk.",
                        "caching": "The caching type.",
                        "diskSizeGB": "The initial managed disk size in GB for blank data disks, and the new desired size for existing OS and Data disks."
                    },
                    "dataDisks": [
                        {
                            "lun": "The logical unit number.",
                            "snapshot": {
                                "id": "Resource Id"
                            },
                            "managedDisk": {
                                "id": "Resource Id"
                            },
                            "blobUri": "The Virtual Hard Disk.",
                            "caching": "The caching type.",
                            "diskSizeGB": "The initial disk size in GB for blank data disks, and the new desired size for existing OS and Data disks."
                        }
                    ]
                },
                "provisioningState": "The provisioning state."
            }
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/images",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture",
        "RequestBody": {
            "vhdPrefix": "(string)",
            "destinationContainerName": "(string)",
            "overwriteVhds": "(boolean)"
        },
        "RequestBodyDoc": {
            "vhdPrefix": "The captured virtual hard disk's name prefix.",
            "destinationContainerName": "The destination container name.",
            "overwriteVhds": "Specifies whether to overwrite the destination virtual hard disk, in case of conflict."
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "plan": {
                "name": "(string)",
                "publisher": "(string)",
                "product": "(string)",
                "promotionCode": "(string)"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "(string)"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "(string)",
                        "publisher": "(string)",
                        "offer": "(string)",
                        "sku": "(string)",
                        "version": "(string)"
                    },
                    "osDisk": {
                        "osType": "(string)",
                        "encryptionSettings": {
                            "diskEncryptionKey": {
                                "secretUrl": "(string)",
                                "sourceVault": {
                                    "id": "(string)"
                                }
                            },
                            "keyEncryptionKey": {
                                "keyUrl": "(string)",
                                "sourceVault": {
                                    "id": "(string)"
                                }
                            },
                            "enabled": "(boolean)"
                        },
                        "name": "(string)",
                        "vhd": {
                            "uri": "(string)"
                        },
                        "image": {
                            "uri": "(string)"
                        },
                        "caching": "(string)",
                        "createOption": "(string)",
                        "diskSizeGB": "(integer)",
                        "managedDisk": {
                            "id": "(string)",
                            "storageAccountType": "(string)"
                        }
                    },
                    "dataDisks": [
                        {
                            "lun": "(integer)",
                            "name": "(string)",
                            "vhd": {
                                "uri": "(string)"
                            },
                            "image": {
                                "uri": "(string)"
                            },
                            "caching": "(string)",
                            "createOption": "(string)",
                            "diskSizeGB": "(integer)",
                            "managedDisk": {
                                "id": "(string)",
                                "storageAccountType": "(string)"
                            }
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "(string)",
                    "adminUsername": "(string)",
                    "adminPassword": "(string)",
                    "customData": "(string)",
                    "windowsConfiguration": {
                        "provisionVMAgent": "(boolean)",
                        "enableAutomaticUpdates": "(boolean)",
                        "timeZone": "(string)",
                        "additionalUnattendContent": [
                            {
                                "passName": "(string)",
                                "componentName": "(string)",
                                "settingName": "(string)",
                                "content": "(string)"
                            }
                        ],
                        "winRM": {
                            "listeners": [
                                {
                                    "protocol": "(string)",
                                    "certificateUrl": "(string)"
                                }
                            ]
                        }
                    },
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "(boolean)",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "(string)",
                                    "keyData": "(string)"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "(string)"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "(string)",
                                    "certificateStore": "(string)"
                                }
                            ]
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "(string)",
                            "properties": {
                                "primary": "(boolean)"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "(boolean)",
                        "storageUri": "(string)"
                    }
                },
                "availabilitySet": {
                    "id": "(string)"
                },
                "provisioningState": "(string)",
                "instanceView": {
                    "platformUpdateDomain": "(integer)",
                    "platformFaultDomain": "(integer)",
                    "rdpThumbPrint": "(string)",
                    "vmAgent": {
                        "vmAgentVersion": "(string)",
                        "extensionHandlers": [
                            {
                                "type": "(string)",
                                "typeHandlerVersion": "(string)",
                                "status": {
                                    "code": "(string)",
                                    "level": "(string)",
                                    "displayStatus": "(string)",
                                    "message": "(string)",
                                    "time": "(string)"
                                }
                            }
                        ],
                        "statuses": [
                            {
                                "code": "(string)",
                                "level": "(string)",
                                "displayStatus": "(string)",
                                "message": "(string)",
                                "time": "(string)"
                            }
                        ]
                    },
                    "disks": [
                        {
                            "name": "(string)",
                            "statuses": [
                                {
                                    "code": "(string)",
                                    "level": "(string)",
                                    "displayStatus": "(string)",
                                    "message": "(string)",
                                    "time": "(string)"
                                }
                            ]
                        }
                    ],
                    "extensions": [
                        {
                            "name": "(string)",
                            "type": "(string)",
                            "typeHandlerVersion": "(string)",
                            "substatuses": [
                                {
                                    "code": "(string)",
                                    "level": "(string)",
                                    "displayStatus": "(string)",
                                    "message": "(string)",
                                    "time": "(string)"
                                }
                            ],
                            "statuses": [
                                {
                                    "code": "(string)",
                                    "level": "(string)",
                                    "displayStatus": "(string)",
                                    "message": "(string)",
                                    "time": "(string)"
                                }
                            ]
                        }
                    ],
                    "bootDiagnostics": {
                        "consoleScreenshotBlobUri": "(string)",
                        "serialConsoleLogBlobUri": "(string)"
                    },
                    "statuses": [
                        {
                            "code": "(string)",
                            "level": "(string)",
                            "displayStatus": "(string)",
                            "message": "(string)",
                            "time": "(string)"
                        }
                    ]
                },
                "licenseType": "(string)",
                "vmId": "(string)"
            },
            "resources": [
                {
                    "id": "(string)",
                    "name": "(string)",
                    "type": "(string)",
                    "location": "(string)",
                    "tags": {},
                    "properties": {
                        "forceUpdateTag": "(string)",
                        "publisher": "(string)",
                        "type": "(string)",
                        "typeHandlerVersion": "(string)",
                        "autoUpgradeMinorVersion": "(boolean)",
                        "settings": {},
                        "protectedSettings": {},
                        "provisioningState": "(string)",
                        "instanceView": {
                            "name": "(string)",
                            "type": "(string)",
                            "typeHandlerVersion": "(string)",
                            "substatuses": [
                                {
                                    "code": "(string)",
                                    "level": "(string)",
                                    "displayStatus": "(string)",
                                    "message": "(string)",
                                    "time": "(string)"
                                }
                            ],
                            "statuses": [
                                {
                                    "code": "(string)",
                                    "level": "(string)",
                                    "displayStatus": "(string)",
                                    "message": "(string)",
                                    "time": "(string)"
                                }
                            ]
                        }
                    }
                }
            ],
            "identity": {
                "principalId": "(string)",
                "tenantId": "(string)",
                "type": "(string)"
            }
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "plan": {
                "name": "The plan ID.",
                "publisher": "The publisher ID.",
                "product": "The offer ID.",
                "promotionCode": "The promotion code."
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "The virtual machine size name."
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "Resource Id",
                        "publisher": "The image publisher.",
                        "offer": "The image offer.",
                        "sku": "The image SKU.",
                        "version": "The image version. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor and Build are decimal numbers. Specify 'latest' to use the latest version of the image."
                    },
                    "osDisk": {
                        "osType": "The Operating System type.",
                        "encryptionSettings": {
                            "diskEncryptionKey": {
                                "secretUrl": "The URL referencing a secret in a Key Vault.",
                                "sourceVault": {
                                    "id": "Resource Id"
                                }
                            },
                            "keyEncryptionKey": {
                                "keyUrl": "The URL referencing a key in a Key Vault.",
                                "sourceVault": {
                                    "id": "Resource Id"
                                }
                            },
                            "enabled": "Specifies whether disk encryption should be enabled on the virtual machine."
                        },
                        "name": "The disk name.",
                        "vhd": {
                            "uri": "The virtual hard disk's URI. Must be a valid URI to a virtual hard disk."
                        },
                        "image": {
                            "uri": "The virtual hard disk's URI. Must be a valid URI to a virtual hard disk."
                        },
                        "caching": "The caching type.",
                        "createOption": "The create option.",
                        "diskSizeGB": "The initial disk size, in GB, for blank data disks, and the new desired size for resizing existing OS and data disks.",
                        "managedDisk": {
                            "id": "Resource Id",
                            "storageAccountType": "The Storage Account type."
                        }
                    },
                    "dataDisks": [
                        {
                            "lun": "The logical unit number.",
                            "name": "The disk name.",
                            "vhd": {
                                "uri": "The virtual hard disk's URI. Must be a valid URI to a virtual hard disk."
                            },
                            "image": {
                                "uri": "The virtual hard disk's URI. Must be a valid URI to a virtual hard disk."
                            },
                            "caching": "The caching type.",
                            "createOption": "The create option.",
                            "diskSizeGB": "The initial disk size in GB for blank data disks, and the new desired size for resizing existing OS and data disks.",
                            "managedDisk": {
                                "id": "Resource Id",
                                "storageAccountType": "The Storage Account type."
                            }
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "Specifies the host OS name of the virtual machine.",
                    "adminUsername": "Specifies the name of the administrator account.",
                    "adminPassword": "Specifies the password of the administrator account.",
                    "customData": "Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes",
                    "windowsConfiguration": {
                        "provisionVMAgent": "Indicates whether the virtual machine agent should be provisioned on the Virtual Machine. If not specified, then the default behavior is to set it to true.",
                        "enableAutomaticUpdates": "Indicates whether Windows updates are automatically installed on the VM.",
                        "timeZone": "The time zone of the VM",
                        "additionalUnattendContent": [
                            {
                                "passName": "The pass name. Currently, the only allowable value is oobeSystem.",
                                "componentName": "The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.",
                                "settingName": "Setting name (e.g. FirstLogonCommands, AutoLogon )",
                                "content": "XML formatted content that is added to the unattend.xml file in the specified pass and component. The XML must be less than 4 KB and must include the root element for the setting or feature that is being inserted."
                            }
                        ],
                        "winRM": {
                            "listeners": [
                                {
                                    "protocol": "The Protocol used by the WinRM listener. Http and Https are supported.",
                                    "certificateUrl": "The Certificate URL in KMS for Https listeners. Should be null for Http listeners."
                                }
                            ]
                        }
                    },
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "Specifies whether password authentication should be disabled.",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "Specifies the full path on the created VM where SSH public key is stored. If the file already exists, the specified key is appended to the file.",
                                    "keyData": "Certificate public key used to authenticate to the VM through SSH. The certificate must be in Pem format with or without headers."
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "Resource Id"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "The URL referencing a secret in a Key Vault which contains a properly formatted certificate.",
                                    "certificateStore": "The Certificate store in LocalMachine to add the certificate to on Windows, leave empty on Linux."
                                }
                            ]
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "Resource Id",
                            "properties": {
                                "primary": "Specifies the primary network interface in case the virtual machine has more than 1 network interface."
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "Whether boot diagnostics should be enabled on the Virtual Machine.",
                        "storageUri": "URI of the storage account to use for placing the console output and screenshot."
                    }
                },
                "availabilitySet": {
                    "id": "Resource Id"
                },
                "provisioningState": "The provisioning state, which only appears in the response.",
                "instanceView": {
                    "platformUpdateDomain": "Specifies the update domain of the virtual machine.",
                    "platformFaultDomain": "Specifies the fault domain of the virtual machine.",
                    "rdpThumbPrint": "The Remote desktop certificate thumbprint.",
                    "vmAgent": {
                        "vmAgentVersion": "The VM Agent full version.",
                        "extensionHandlers": [
                            {
                                "type": "Full type of the extension handler which includes both publisher and type.",
                                "typeHandlerVersion": "The type version of the extension handler.",
                                "status": {
                                    "code": "The status code.",
                                    "level": "The level code.",
                                    "displayStatus": "The short localizable label for the status.",
                                    "message": "The detailed status message, including for alerts and error messages.",
                                    "time": "The time of the status."
                                }
                            }
                        ],
                        "statuses": [
                            {
                                "code": "The status code.",
                                "level": "The level code.",
                                "displayStatus": "The short localizable label for the status.",
                                "message": "The detailed status message, including for alerts and error messages.",
                                "time": "The time of the status."
                            }
                        ]
                    },
                    "disks": [
                        {
                            "name": "The disk name.",
                            "statuses": [
                                {
                                    "code": "The status code.",
                                    "level": "The level code.",
                                    "displayStatus": "The short localizable label for the status.",
                                    "message": "The detailed status message, including for alerts and error messages.",
                                    "time": "The time of the status."
                                }
                            ]
                        }
                    ],
                    "extensions": [
                        {
                            "name": "The virtual machine extension name.",
                            "type": "The full type of the extension handler which includes both publisher and type.",
                            "typeHandlerVersion": "The type version of the extension handler.",
                            "substatuses": [
                                {
                                    "code": "The status code.",
                                    "level": "The level code.",
                                    "displayStatus": "The short localizable label for the status.",
                                    "message": "The detailed status message, including for alerts and error messages.",
                                    "time": "The time of the status."
                                }
                            ],
                            "statuses": [
                                {
                                    "code": "The status code.",
                                    "level": "The level code.",
                                    "displayStatus": "The short localizable label for the status.",
                                    "message": "The detailed status message, including for alerts and error messages.",
                                    "time": "The time of the status."
                                }
                            ]
                        }
                    ],
                    "bootDiagnostics": {
                        "consoleScreenshotBlobUri": "The console screenshot blob URI.",
                        "serialConsoleLogBlobUri": "The Linux serial console log blob Uri."
                    },
                    "statuses": [
                        {
                            "code": "The status code.",
                            "level": "The level code.",
                            "displayStatus": "The short localizable label for the status.",
                            "message": "The detailed status message, including for alerts and error messages.",
                            "time": "The time of the status."
                        }
                    ]
                },
                "licenseType": "Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system.",
                "vmId": "Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands."
            },
            "resources": [
                {
                    "id": "Resource Id",
                    "name": "Resource name",
                    "type": "Resource type",
                    "location": "Resource location",
                    "tags": {},
                    "properties": {
                        "forceUpdateTag": "How the extension handler should be forced to update even if the extension configuration has not changed.",
                        "publisher": "The name of the extension handler publisher.",
                        "type": "The type of the extension handler.",
                        "typeHandlerVersion": "The type version of the extension handler.",
                        "autoUpgradeMinorVersion": "Whether the extension handler should be automatically upgraded across minor versions.",
                        "settings": {},
                        "protectedSettings": {},
                        "provisioningState": "The provisioning state, which only appears in the response.",
                        "instanceView": {
                            "name": "The virtual machine extension name.",
                            "type": "The full type of the extension handler which includes both publisher and type.",
                            "typeHandlerVersion": "The type version of the extension handler.",
                            "substatuses": [
                                {
                                    "code": "The status code.",
                                    "level": "The level code.",
                                    "displayStatus": "The short localizable label for the status.",
                                    "message": "The detailed status message, including for alerts and error messages.",
                                    "time": "The time of the status."
                                }
                            ],
                            "statuses": [
                                {
                                    "code": "The status code.",
                                    "level": "The level code.",
                                    "displayStatus": "The short localizable label for the status.",
                                    "message": "The detailed status message, including for alerts and error messages.",
                                    "time": "The time of the status."
                                }
                            ]
                        }
                    }
                }
            ],
            "identity": {
                "principalId": "The principal id of virtual machine identity.",
                "tenantId": "The tenant id associated with the virtual machine.",
                "type": "The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity."
            }
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/convertToManagedDisks",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/generalize",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachines",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/vmSizes",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{name}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "sku": {
                "name": "(string)",
                "tier": "(string)",
                "capacity": "(integer)"
            },
            "plan": {
                "name": "(string)",
                "publisher": "(string)",
                "product": "(string)",
                "promotionCode": "(string)"
            },
            "properties": {
                "upgradePolicy": {
                    "mode": "(string)"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "(string)",
                        "adminUsername": "(string)",
                        "adminPassword": "(string)",
                        "customData": "(string)",
                        "windowsConfiguration": {
                            "provisionVMAgent": "(boolean)",
                            "enableAutomaticUpdates": "(boolean)",
                            "timeZone": "(string)",
                            "additionalUnattendContent": [
                                {
                                    "passName": "(string)",
                                    "componentName": "(string)",
                                    "settingName": "(string)",
                                    "content": "(string)"
                                }
                            ],
                            "winRM": {
                                "listeners": [
                                    {
                                        "protocol": "(string)",
                                        "certificateUrl": "(string)"
                                    }
                                ]
                            }
                        },
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": "(boolean)",
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "(string)",
                                        "keyData": "(string)"
                                    }
                                ]
                            }
                        },
                        "secrets": [
                            {
                                "sourceVault": {
                                    "id": "(string)"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateUrl": "(string)",
                                        "certificateStore": "(string)"
                                    }
                                ]
                            }
                        ]
                    },
                    "storageProfile": {
                        "imageReference": {
                            "id": "(string)",
                            "publisher": "(string)",
                            "offer": "(string)",
                            "sku": "(string)",
                            "version": "(string)"
                        },
                        "osDisk": {
                            "name": "(string)",
                            "caching": "(string)",
                            "createOption": "(string)",
                            "osType": "(string)",
                            "image": {
                                "uri": "(string)"
                            },
                            "vhdContainers": [
                                "(string)"
                            ],
                            "managedDisk": {
                                "storageAccountType": "(string)"
                            }
                        },
                        "dataDisks": [
                            {
                                "name": "(string)",
                                "lun": "(integer)",
                                "caching": "(string)",
                                "createOption": "(string)",
                                "diskSizeGB": "(integer)",
                                "managedDisk": {
                                    "storageAccountType": "(string)"
                                }
                            }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "id": "(string)",
                                "name": "(string)",
                                "properties": {
                                    "primary": "(boolean)",
                                    "ipConfigurations": [
                                        {
                                            "id": "(string)",
                                            "name": "(string)",
                                            "properties": {
                                                "subnet": {
                                                    "id": "(string)"
                                                },
                                                "applicationGatewayBackendAddressPools": [
                                                    {
                                                        "id": "(string)"
                                                    }
                                                ],
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "(string)"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "(string)"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "id": "(string)",
                                "name": "(string)",
                                "properties": {
                                    "publisher": "(string)",
                                    "type": "(string)",
                                    "typeHandlerVersion": "(string)",
                                    "autoUpgradeMinorVersion": "(boolean)",
                                    "settings": {},
                                    "protectedSettings": {},
                                    "provisioningState": "(string)"
                                }
                            }
                        ]
                    }
                },
                "provisioningState": "(string)",
                "overprovision": "(boolean)",
                "singlePlacementGroup": "(boolean)"
            },
            "identity": {
                "principalId": "(string)",
                "tenantId": "(string)",
                "type": "(string)"
            }
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "sku": {
                "name": "The sku name.",
                "tier": "The sku tier.",
                "capacity": "The sku capacity."
            },
            "plan": {
                "name": "The plan ID.",
                "publisher": "The publisher ID.",
                "product": "The offer ID.",
                "promotionCode": "The promotion code."
            },
            "properties": {
                "upgradePolicy": {
                    "mode": "The upgrade mode."
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "The computer name prefix.",
                        "adminUsername": "The admin user name.",
                        "adminPassword": "The admin user password.",
                        "customData": "A base-64 encoded string of custom data.",
                        "windowsConfiguration": {
                            "provisionVMAgent": "Indicates whether the virtual machine agent should be provisioned on the Virtual Machine. If not specified, then the default behavior is to set it to true.",
                            "enableAutomaticUpdates": "Indicates whether Windows updates are automatically installed on the VM.",
                            "timeZone": "The time zone of the VM",
                            "additionalUnattendContent": [
                                {
                                    "passName": "The pass name. Currently, the only allowable value is oobeSystem.",
                                    "componentName": "The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.",
                                    "settingName": "Setting name (e.g. FirstLogonCommands, AutoLogon )",
                                    "content": "XML formatted content that is added to the unattend.xml file in the specified pass and component. The XML must be less than 4 KB and must include the root element for the setting or feature that is being inserted."
                                }
                            ],
                            "winRM": {
                                "listeners": [
                                    {
                                        "protocol": "The Protocol used by the WinRM listener. Http and Https are supported.",
                                        "certificateUrl": "The Certificate URL in KMS for Https listeners. Should be null for Http listeners."
                                    }
                                ]
                            }
                        },
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": "Specifies whether password authentication should be disabled.",
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "Specifies the full path on the created VM where SSH public key is stored. If the file already exists, the specified key is appended to the file.",
                                        "keyData": "Certificate public key used to authenticate to the VM through SSH. The certificate must be in Pem format with or without headers."
                                    }
                                ]
                            }
                        },
                        "secrets": [
                            {
                                "sourceVault": {
                                    "id": "Resource Id"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateUrl": "The URL referencing a secret in a Key Vault which contains a properly formatted certificate.",
                                        "certificateStore": "The Certificate store in LocalMachine to add the certificate to on Windows, leave empty on Linux."
                                    }
                                ]
                            }
                        ]
                    },
                    "storageProfile": {
                        "imageReference": {
                            "id": "Resource Id",
                            "publisher": "The image publisher.",
                            "offer": "The image offer.",
                            "sku": "The image SKU.",
                            "version": "The image version. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor and Build are decimal numbers. Specify 'latest' to use the latest version of the image."
                        },
                        "osDisk": {
                            "name": "The disk name.",
                            "caching": "The caching type.",
                            "createOption": "The create option.",
                            "osType": "The Operating System type.",
                            "image": {
                                "uri": "The virtual hard disk's URI. Must be a valid URI to a virtual hard disk."
                            },
                            "vhdContainers": [
                                null
                            ],
                            "managedDisk": {
                                "storageAccountType": "The Storage Account type."
                            }
                        },
                        "dataDisks": [
                            {
                                "name": "The disk name.",
                                "lun": "The logical unit number.",
                                "caching": "The caching type.",
                                "createOption": "The create option.",
                                "diskSizeGB": "The initial disk size in GB for blank data disks, and the new desired size for existing OS and Data disks.",
                                "managedDisk": {
                                    "storageAccountType": "The Storage Account type."
                                }
                            }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "id": "Resource Id",
                                "name": "The network configuration name.",
                                "properties": {
                                    "primary": "Whether this is a primary NIC on a virtual machine.",
                                    "ipConfigurations": [
                                        {
                                            "id": "Resource Id",
                                            "name": "The IP configuration name.",
                                            "properties": {
                                                "subnet": {
                                                    "id": "The ARM resource id in the form of /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/..."
                                                },
                                                "applicationGatewayBackendAddressPools": [
                                                    {
                                                        "id": "Resource Id"
                                                    }
                                                ],
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "Resource Id"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "Resource Id"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "id": "Resource Id",
                                "name": "The name of the extension.",
                                "properties": {
                                    "publisher": "The name of the extension handler publisher.",
                                    "type": "The type of the extension handler.",
                                    "typeHandlerVersion": "The type version of the extension handler.",
                                    "autoUpgradeMinorVersion": "Whether the extension handler should be automatically upgraded across minor versions.",
                                    "settings": {},
                                    "protectedSettings": {},
                                    "provisioningState": "The provisioning state, which only appears in the response."
                                }
                            }
                        ]
                    }
                },
                "provisioningState": "The provisioning state, which only appears in the response.",
                "overprovision": "Specifies whether the Virtual Machine Scale Set should be overprovisioned.",
                "singlePlacementGroup": "When true this limits the scale set to a single placement group, of max size 100 virtual machines."
            },
            "identity": {
                "principalId": "The principal id of virtual machine scale set identity.",
                "tenantId": "The tenant id associated with the virtual machine scale set.",
                "type": "The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity."
            }
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate",
        "RequestBody": {
            "instanceIds": [
                "(string)"
            ]
        },
        "RequestBodyDoc": {
            "instanceIds": [
                null
            ]
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete",
        "RequestBody": {
            "instanceIds": [
                "(string)"
            ]
        },
        "RequestBodyDoc": {
            "instanceIds": [
                null
            ]
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/instanceView",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachineScaleSets",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/skus",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff",
        "RequestBody": {
            "instanceIds": [
                "(string)"
            ]
        },
        "RequestBodyDoc": {
            "instanceIds": [
                null
            ]
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart",
        "RequestBody": {
            "instanceIds": [
                "(string)"
            ]
        },
        "RequestBodyDoc": {
            "instanceIds": [
                null
            ]
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start",
        "RequestBody": {
            "instanceIds": [
                "(string)"
            ]
        },
        "RequestBodyDoc": {
            "instanceIds": [
                null
            ]
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade",
        "RequestBody": {
            "instanceIds": [
                "(string)"
            ]
        },
        "RequestBodyDoc": {
            "instanceIds": [
                null
            ]
        },
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimage",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/reimageall",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/deallocate",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/instanceView",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart",
        "ApiVersion": "2016-04-30-preview"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start",
        "ApiVersion": "2016-04-30-preview"
    }
]
