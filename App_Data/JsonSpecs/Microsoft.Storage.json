[
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability",
        "RequestBody": {
            "name": "(string)",
            "type": "(string)"
        },
        "RequestBodyDoc": {},
        "ApiVersion": "2016-12-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
        "RequestBody": {
            "sku": {
                "name": "(string)",
                "tier": "(string)"
            },
            "kind": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "customDomain": {
                    "name": "(string)",
                    "useSubDomain": "(boolean)"
                },
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": "(boolean)",
                            "lastEnabledTime": "(string)"
                        },
                        "file": {
                            "enabled": "(boolean)",
                            "lastEnabledTime": "(string)"
                        },
                        "table": {
                            "enabled": "(boolean)",
                            "lastEnabledTime": "(string)"
                        },
                        "queue": {
                            "enabled": "(boolean)",
                            "lastEnabledTime": "(string)"
                        }
                    },
                    "keySource": "(string)"
                },
                "accessTier": "(string)",
                "supportsHttpsTrafficOnly": "(boolean)"
            }
        },
        "RequestBodyDoc": {
            "sku": {
                "name": "Gets or sets the sku name. Required for account creation; optional for update. Note that in older versions, sku name was called accountType.",
                "tier": "Gets the sku tier. This is based on the SKU name."
            },
            "kind": "Required. Indicates the type of storage account.",
            "location": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.",
            "tags": {},
            "properties": {
                "customDomain": {
                    "name": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
                    "useSubDomain": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates."
                },
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": "A boolean indicating whether or not the service encrypts the data as it is stored.",
                            "lastEnabledTime": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate."
                        },
                        "file": {
                            "enabled": "A boolean indicating whether or not the service encrypts the data as it is stored.",
                            "lastEnabledTime": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate."
                        },
                        "table": {
                            "enabled": "A boolean indicating whether or not the service encrypts the data as it is stored.",
                            "lastEnabledTime": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate."
                        },
                        "queue": {
                            "enabled": "A boolean indicating whether or not the service encrypts the data as it is stored.",
                            "lastEnabledTime": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate."
                        }
                    },
                    "keySource": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage"
                },
                "accessTier": "Required for storage accounts where kind = BlobStorage. The access tier used for billing.",
                "supportsHttpsTrafficOnly": "Allows https traffic only to storage service if sets to true."
            }
        },
        "ApiVersion": "2016-12-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
        "ApiVersion": "2016-12-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
        "ApiVersion": "2016-12-01"
    },
    {
        "MethodName": "Update",
        "HttpMethod": "PATCH",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
        "RequestBody": {
            "sku": {
                "name": "(string)",
                "tier": "(string)"
            },
            "tags": {},
            "properties": {
                "customDomain": {
                    "name": "(string)",
                    "useSubDomain": "(boolean)"
                },
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": "(boolean)",
                            "lastEnabledTime": "(string)"
                        },
                        "file": {
                            "enabled": "(boolean)",
                            "lastEnabledTime": "(string)"
                        },
                        "table": {
                            "enabled": "(boolean)",
                            "lastEnabledTime": "(string)"
                        },
                        "queue": {
                            "enabled": "(boolean)",
                            "lastEnabledTime": "(string)"
                        }
                    },
                    "keySource": "(string)"
                },
                "accessTier": "(string)",
                "supportsHttpsTrafficOnly": "(boolean)"
            }
        },
        "RequestBodyDoc": {
            "sku": {
                "name": "Gets or sets the sku name. Required for account creation; optional for update. Note that in older versions, sku name was called accountType.",
                "tier": "Gets the sku tier. This is based on the SKU name."
            },
            "tags": {},
            "properties": {
                "customDomain": {
                    "name": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
                    "useSubDomain": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates."
                },
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": "A boolean indicating whether or not the service encrypts the data as it is stored.",
                            "lastEnabledTime": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate."
                        },
                        "file": {
                            "enabled": "A boolean indicating whether or not the service encrypts the data as it is stored.",
                            "lastEnabledTime": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate."
                        },
                        "table": {
                            "enabled": "A boolean indicating whether or not the service encrypts the data as it is stored.",
                            "lastEnabledTime": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate."
                        },
                        "queue": {
                            "enabled": "A boolean indicating whether or not the service encrypts the data as it is stored.",
                            "lastEnabledTime": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate."
                        }
                    },
                    "keySource": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage"
                },
                "accessTier": "Required for storage accounts where kind = BlobStorage. The access tier used for billing.",
                "supportsHttpsTrafficOnly": "Allows https traffic only to storage service if sets to true."
            }
        },
        "ApiVersion": "2016-12-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts",
        "ApiVersion": "2016-12-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts",
        "ApiVersion": "2016-12-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys",
        "ApiVersion": "2016-12-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey",
        "RequestBody": {
            "keyName": "(string)"
        },
        "RequestBodyDoc": {},
        "ApiVersion": "2016-12-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages",
        "ApiVersion": "2016-12-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas",
        "RequestBody": {
            "signedServices": "(string)",
            "signedResourceTypes": "(string)",
            "signedPermission": "(string)",
            "signedIp": "(string)",
            "signedProtocol": "(string)",
            "signedStart": "(string)",
            "signedExpiry": "(string)",
            "keyToSign": "(string)"
        },
        "RequestBodyDoc": {
            "signedServices": "The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f).",
            "signedResourceTypes": "The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files.",
            "signedPermission": "The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).",
            "signedIp": "An IP address or a range of IP addresses from which to accept requests.",
            "signedProtocol": "The protocol permitted for a request made with the account SAS.",
            "signedStart": "The time at which the SAS becomes valid.",
            "signedExpiry": "The time at which the shared access signature becomes invalid.",
            "keyToSign": "The key to sign the account SAS token with."
        },
        "ApiVersion": "2016-12-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas",
        "RequestBody": {
            "canonicalizedResource": "(string)",
            "signedResource": "(string)",
            "signedPermission": "(string)",
            "signedIp": "(string)",
            "signedProtocol": "(string)",
            "signedStart": "(string)",
            "signedExpiry": "(string)",
            "signedIdentifier": "(string)",
            "startPk": "(string)",
            "endPk": "(string)",
            "startRk": "(string)",
            "endRk": "(string)",
            "keyToSign": "(string)",
            "rscc": "(string)",
            "rscd": "(string)",
            "rsce": "(string)",
            "rscl": "(string)",
            "rsct": "(string)"
        },
        "RequestBodyDoc": {
            "canonicalizedResource": "The canonical path to the signed resource.",
            "signedResource": "The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).",
            "signedPermission": "The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).",
            "signedIp": "An IP address or a range of IP addresses from which to accept requests.",
            "signedProtocol": "The protocol permitted for a request made with the account SAS.",
            "signedStart": "The time at which the SAS becomes valid.",
            "signedExpiry": "The time at which the shared access signature becomes invalid.",
            "signedIdentifier": "A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.",
            "startPk": "The start of partition key.",
            "endPk": "The end of partition key.",
            "startRk": "The start of row key.",
            "endRk": "The end of row key.",
            "keyToSign": "The key to sign the account SAS token with.",
            "rscc": "The response header override for cache control.",
            "rscd": "The response header override for content disposition.",
            "rsce": "The response header override for content encoding.",
            "rscl": "The response header override for content language.",
            "rsct": "The response header override for content type."
        },
        "ApiVersion": "2016-12-01"
    }
]
