[
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "sku": {
                    "name": "(string)",
                    "tier": "(string)",
                    "capacity": "(integer)"
                },
                "sslPolicy": {
                    "disabledSslProtocols": [
                        "(string)"
                    ]
                },
                "operationalState": "(string)",
                "gatewayIPConfigurations": [
                    {
                        "id": "(string)",
                        "properties": {
                            "subnet": {
                                "id": "(string)"
                            },
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "authenticationCertificates": [
                    {
                        "id": "(string)",
                        "properties": {
                            "data": "(string)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "sslCertificates": [
                    {
                        "id": "(string)",
                        "properties": {
                            "data": "(string)",
                            "password": "(string)",
                            "publicCertData": "(string)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "id": "(string)",
                        "properties": {
                            "privateIPAddress": "(string)",
                            "privateIPAllocationMethod": "(string)",
                            "subnet": {
                                "id": "(string)"
                            },
                            "publicIPAddress": {
                                "id": "(string)"
                            },
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "frontendPorts": [
                    {
                        "id": "(string)",
                        "properties": {
                            "port": "(integer)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "probes": [
                    {
                        "id": "(string)",
                        "properties": {
                            "protocol": "(string)",
                            "host": "(string)",
                            "path": "(string)",
                            "interval": "(integer)",
                            "timeout": "(integer)",
                            "unhealthyThreshold": "(integer)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "backendAddressPools": [
                    {
                        "id": "(string)",
                        "properties": {
                            "backendIPConfigurations": [
                                "(undefined)"
                            ],
                            "backendAddresses": [
                                {
                                    "fqdn": "(string)",
                                    "ipAddress": "(string)"
                                }
                            ],
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "id": "(string)",
                        "properties": {
                            "port": "(integer)",
                            "protocol": "(string)",
                            "cookieBasedAffinity": "(string)",
                            "requestTimeout": "(integer)",
                            "probe": {
                                "id": "(string)"
                            },
                            "authenticationCertificates": [
                                {
                                    "id": "(string)"
                                }
                            ],
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "httpListeners": [
                    {
                        "id": "(string)",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "(string)"
                            },
                            "frontendPort": {
                                "id": "(string)"
                            },
                            "protocol": "(string)",
                            "hostName": "(string)",
                            "sslCertificate": {
                                "id": "(string)"
                            },
                            "requireServerNameIndication": "(boolean)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "urlPathMaps": [
                    {
                        "id": "(string)",
                        "properties": {
                            "defaultBackendAddressPool": {
                                "id": "(string)"
                            },
                            "defaultBackendHttpSettings": {
                                "id": "(string)"
                            },
                            "pathRules": [
                                {
                                    "id": "(string)",
                                    "properties": {
                                        "paths": [
                                            "(string)"
                                        ],
                                        "backendAddressPool": {
                                            "id": "(string)"
                                        },
                                        "backendHttpSettings": {
                                            "id": "(string)"
                                        },
                                        "provisioningState": "(string)"
                                    },
                                    "name": "(string)",
                                    "etag": "(string)"
                                }
                            ],
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "requestRoutingRules": [
                    {
                        "id": "(string)",
                        "properties": {
                            "ruleType": "(string)",
                            "backendAddressPool": {
                                "id": "(string)"
                            },
                            "backendHttpSettings": {
                                "id": "(string)"
                            },
                            "httpListener": {
                                "id": "(string)"
                            },
                            "urlPathMap": {
                                "id": "(string)"
                            },
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "webApplicationFirewallConfiguration": {
                    "enabled": "(boolean)",
                    "firewallMode": "(string)"
                },
                "resourceGuid": "(string)",
                "provisioningState": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "sku": {
                    "name": "Name of application gateway SKU",
                    "tier": "Tier of application gateway",
                    "capacity": "Capacity (instance count) of application gateway"
                },
                "sslPolicy": {
                    "disabledSslProtocols": [
                        null
                    ]
                },
                "operationalState": "Operational state of application gateway resource",
                "gatewayIPConfigurations": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "subnet": {
                                "id": "Resource Id"
                            },
                            "provisioningState": "Provisioning state of the application gateway subnet resource Updating/Deleting/Failed"
                        },
                        "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "authenticationCertificates": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "data": "Certificate public data ",
                            "provisioningState": "Provisioning state of the authentication certificate resource Updating/Deleting/Failed"
                        },
                        "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "sslCertificates": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "data": "SSL Certificate data ",
                            "password": "SSL Certificate password ",
                            "publicCertData": "SSL Certificate public data ",
                            "provisioningState": "Provisioning state of the ssl certificate resource Updating/Deleting/Failed"
                        },
                        "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "privateIPAddress": "PrivateIPAddress of the Network Interface IP Configuration",
                            "privateIPAllocationMethod": "PrivateIP allocation method (Static/Dynamic)",
                            "subnet": {
                                "id": "Resource Id"
                            },
                            "publicIPAddress": {
                                "id": "Resource Id"
                            },
                            "provisioningState": "Provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "frontendPorts": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "port": "Frontend port",
                            "provisioningState": "Provisioning state of the frontend port resource Updating/Deleting/Failed"
                        },
                        "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "probes": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "protocol": "Protocol",
                            "host": "Host to send probe to ",
                            "path": "Relative path of probe ",
                            "interval": "Probing interval in seconds ",
                            "timeout": "Probing timeout in seconds ",
                            "unhealthyThreshold": "Probing unhealthy threshold ",
                            "provisioningState": "Provisioning state of the backend http settings resource Updating/Deleting/Failed"
                        },
                        "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "backendAddressPools": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "backendIPConfigurations": [
                                null
                            ],
                            "backendAddresses": [
                                {
                                    "fqdn": "Dns name",
                                    "ipAddress": "Ip address"
                                }
                            ],
                            "provisioningState": "Provisioning state of the backend address pool resource Updating/Deleting/Failed"
                        },
                        "name": "Resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "port": "Port",
                            "protocol": "Protocol",
                            "cookieBasedAffinity": "Cookie affinity",
                            "requestTimeout": "Request timeout",
                            "probe": {
                                "id": "Resource Id"
                            },
                            "authenticationCertificates": [
                                {
                                    "id": "Resource Id"
                                }
                            ],
                            "provisioningState": "Provisioning state of the backend http settings resource Updating/Deleting/Failed"
                        },
                        "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "httpListeners": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "Resource Id"
                            },
                            "frontendPort": {
                                "id": "Resource Id"
                            },
                            "protocol": "Protocol",
                            "hostName": "Host name of http listener ",
                            "sslCertificate": {
                                "id": "Resource Id"
                            },
                            "requireServerNameIndication": "RequireServerNameIndication of http listener ",
                            "provisioningState": "Provisioning state of the http listener resource Updating/Deleting/Failed"
                        },
                        "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "urlPathMaps": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "defaultBackendAddressPool": {
                                "id": "Resource Id"
                            },
                            "defaultBackendHttpSettings": {
                                "id": "Resource Id"
                            },
                            "pathRules": [
                                {
                                    "id": "Resource Id",
                                    "properties": {
                                        "paths": [
                                            null
                                        ],
                                        "backendAddressPool": {
                                            "id": "Resource Id"
                                        },
                                        "backendHttpSettings": {
                                            "id": "Resource Id"
                                        },
                                        "provisioningState": "Path rule of URL path map resource Updating/Deleting/Failed"
                                    },
                                    "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                }
                            ],
                            "provisioningState": "Provisioning state of the backend http settings resource Updating/Deleting/Failed"
                        },
                        "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "requestRoutingRules": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "ruleType": "Rule type",
                            "backendAddressPool": {
                                "id": "Resource Id"
                            },
                            "backendHttpSettings": {
                                "id": "Resource Id"
                            },
                            "httpListener": {
                                "id": "Resource Id"
                            },
                            "urlPathMap": {
                                "id": "Resource Id"
                            },
                            "provisioningState": "Provisioning state of the request routing rule resource Updating/Deleting/Failed"
                        },
                        "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "webApplicationFirewallConfiguration": {
                    "enabled": "Whether web application firewall is enabled",
                    "firewallMode": "Web application firewall mode"
                },
                "resourceGuid": "Resource guid property of the ApplicationGateway resource",
                "provisioningState": "Provisioning state of the ApplicationGateway resource Updating/Deleting/Failed"
            },
            "etag": "A unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",
        "RequestBody": {
            "id": "(string)",
            "properties": {
                "authorizationKey": "(string)",
                "authorizationUseStatus": "(string)",
                "provisioningState": "(string)"
            },
            "name": "(string)",
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "properties": {
                "authorizationKey": "Gets or sets the authorization key",
                "authorizationUseStatus": "Gets or sets AuthorizationUseStatus",
                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
            },
            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
            "etag": "A unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",
        "RequestBody": {
            "id": "(string)",
            "properties": {
                "peeringType": "(string)",
                "state": "(string)",
                "azureASN": "(integer)",
                "peerASN": "(integer)",
                "primaryPeerAddressPrefix": "(string)",
                "secondaryPeerAddressPrefix": "(string)",
                "primaryAzurePort": "(string)",
                "secondaryAzurePort": "(string)",
                "sharedKey": "(string)",
                "vlanId": "(integer)",
                "microsoftPeeringConfig": {
                    "advertisedPublicPrefixes": [
                        "(string)"
                    ],
                    "advertisedPublicPrefixesState": "(string)",
                    "customerASN": "(integer)",
                    "routingRegistryName": "(string)"
                },
                "stats": {
                    "primarybytesIn": "(integer)",
                    "primarybytesOut": "(integer)",
                    "secondarybytesIn": "(integer)",
                    "secondarybytesOut": "(integer)"
                },
                "provisioningState": "(string)",
                "gatewayManagerEtag": "(string)",
                "lastModifiedBy": "(string)"
            },
            "name": "(string)",
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "properties": {
                "peeringType": "Gets or sets PeeringType",
                "state": "Gets or sets state of Peering",
                "azureASN": "Gets or sets the azure ASN",
                "peerASN": "Gets or sets the peer ASN",
                "primaryPeerAddressPrefix": "Gets or sets the primary address prefix",
                "secondaryPeerAddressPrefix": "Gets or sets the secondary address prefix",
                "primaryAzurePort": "Gets or sets the primary port",
                "secondaryAzurePort": "Gets or sets the secondary port",
                "sharedKey": "Gets or sets the shared key",
                "vlanId": "Gets or sets the vlan id",
                "microsoftPeeringConfig": {
                    "advertisedPublicPrefixes": [
                        null
                    ],
                    "advertisedPublicPrefixesState": "Gets or sets AdvertisedPublicPrefixState of the Peering resource ",
                    "customerASN": "Gets or Sets CustomerAsn of the peering.",
                    "routingRegistryName": "Gets or Sets RoutingRegistryName of the config."
                },
                "stats": {
                    "primarybytesIn": "Gets BytesIn of the peering.",
                    "primarybytesOut": "Gets BytesOut of the peering.",
                    "secondarybytesIn": "Gets BytesIn of the peering.",
                    "secondarybytesOut": "Gets BytesOut of the peering."
                },
                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed",
                "gatewayManagerEtag": "Gets or sets the GatewayManager Etag",
                "lastModifiedBy": "Gets whether the provider or the customer last modified the peering"
            },
            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
            "etag": "A unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "sku": {
                "name": "(string)",
                "tier": "(string)",
                "family": "(string)"
            },
            "properties": {
                "allowClassicOperations": "(boolean)",
                "circuitProvisioningState": "(string)",
                "serviceProviderProvisioningState": "(string)",
                "authorizations": [
                    {
                        "id": "(string)",
                        "properties": {
                            "authorizationKey": "(string)",
                            "authorizationUseStatus": "(string)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "peerings": [
                    {
                        "id": "(string)",
                        "properties": {
                            "peeringType": "(string)",
                            "state": "(string)",
                            "azureASN": "(integer)",
                            "peerASN": "(integer)",
                            "primaryPeerAddressPrefix": "(string)",
                            "secondaryPeerAddressPrefix": "(string)",
                            "primaryAzurePort": "(string)",
                            "secondaryAzurePort": "(string)",
                            "sharedKey": "(string)",
                            "vlanId": "(integer)",
                            "microsoftPeeringConfig": {
                                "advertisedPublicPrefixes": [
                                    "(string)"
                                ],
                                "advertisedPublicPrefixesState": "(string)",
                                "customerASN": "(integer)",
                                "routingRegistryName": "(string)"
                            },
                            "stats": {
                                "primarybytesIn": "(integer)",
                                "primarybytesOut": "(integer)",
                                "secondarybytesIn": "(integer)",
                                "secondarybytesOut": "(integer)"
                            },
                            "provisioningState": "(string)",
                            "gatewayManagerEtag": "(string)",
                            "lastModifiedBy": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "serviceKey": "(string)",
                "serviceProviderNotes": "(string)",
                "serviceProviderProperties": {
                    "serviceProviderName": "(string)",
                    "peeringLocation": "(string)",
                    "bandwidthInMbps": "(integer)"
                },
                "provisioningState": "(string)",
                "gatewayManagerEtag": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "sku": {
                "name": "Gets or sets name of the sku.",
                "tier": "Gets or sets tier of the sku.",
                "family": "Gets or sets family of the sku."
            },
            "properties": {
                "allowClassicOperations": "allow classic operations",
                "circuitProvisioningState": "Gets or sets CircuitProvisioningState state of the resource ",
                "serviceProviderProvisioningState": "Gets or sets ServiceProviderProvisioningState state of the resource ",
                "authorizations": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "authorizationKey": "Gets or sets the authorization key",
                            "authorizationUseStatus": "Gets or sets AuthorizationUseStatus",
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "peerings": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "peeringType": "Gets or sets PeeringType",
                            "state": "Gets or sets state of Peering",
                            "azureASN": "Gets or sets the azure ASN",
                            "peerASN": "Gets or sets the peer ASN",
                            "primaryPeerAddressPrefix": "Gets or sets the primary address prefix",
                            "secondaryPeerAddressPrefix": "Gets or sets the secondary address prefix",
                            "primaryAzurePort": "Gets or sets the primary port",
                            "secondaryAzurePort": "Gets or sets the secondary port",
                            "sharedKey": "Gets or sets the shared key",
                            "vlanId": "Gets or sets the vlan id",
                            "microsoftPeeringConfig": {
                                "advertisedPublicPrefixes": [
                                    null
                                ],
                                "advertisedPublicPrefixesState": "Gets or sets AdvertisedPublicPrefixState of the Peering resource ",
                                "customerASN": "Gets or Sets CustomerAsn of the peering.",
                                "routingRegistryName": "Gets or Sets RoutingRegistryName of the config."
                            },
                            "stats": {
                                "primarybytesIn": "Gets BytesIn of the peering.",
                                "primarybytesOut": "Gets BytesOut of the peering.",
                                "secondarybytesIn": "Gets BytesIn of the peering.",
                                "secondarybytesOut": "Gets BytesOut of the peering."
                            },
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed",
                            "gatewayManagerEtag": "Gets or sets the GatewayManager Etag",
                            "lastModifiedBy": "Gets whether the provider or the customer last modified the peering"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "serviceKey": "Gets or sets ServiceKey",
                "serviceProviderNotes": "Gets or sets ServiceProviderNotes",
                "serviceProviderProperties": {
                    "serviceProviderName": "Gets or sets serviceProviderName.",
                    "peeringLocation": "Gets or sets peering location.",
                    "bandwidthInMbps": "Gets or sets BandwidthInMbps."
                },
                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed",
                "gatewayManagerEtag": "Gets or sets the GatewayManager Etag"
            },
            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/arpTables/{devicePath}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTablesSummary/{devicePath}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/stats",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/stats",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteServiceProviders",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "id": "(string)",
                        "properties": {
                            "inboundNatRules": [
                                {
                                    "id": "(string)"
                                }
                            ],
                            "inboundNatPools": [
                                {
                                    "id": "(string)"
                                }
                            ],
                            "outboundNatRules": [
                                {
                                    "id": "(string)"
                                }
                            ],
                            "loadBalancingRules": [
                                {
                                    "id": "(string)"
                                }
                            ],
                            "privateIPAddress": "(string)",
                            "privateIPAllocationMethod": "(string)",
                            "subnet": {
                                "id": "(string)",
                                "properties": {
                                    "addressPrefix": "(string)",
                                    "networkSecurityGroup": {
                                        "id": "(string)",
                                        "name": "(string)",
                                        "type": "(string)",
                                        "location": "(string)",
                                        "tags": {},
                                        "properties": {
                                            "securityRules": [
                                                {
                                                    "id": "(string)",
                                                    "properties": {
                                                        "description": "(string)",
                                                        "protocol": "(string)",
                                                        "sourcePortRange": "(string)",
                                                        "destinationPortRange": "(string)",
                                                        "sourceAddressPrefix": "(string)",
                                                        "destinationAddressPrefix": "(string)",
                                                        "access": "(string)",
                                                        "priority": "(integer)",
                                                        "direction": "(string)",
                                                        "provisioningState": "(string)"
                                                    },
                                                    "name": "(string)",
                                                    "etag": "(string)"
                                                }
                                            ],
                                            "defaultSecurityRules": [
                                                {
                                                    "id": "(string)",
                                                    "properties": {
                                                        "description": "(string)",
                                                        "protocol": "(string)",
                                                        "sourcePortRange": "(string)",
                                                        "destinationPortRange": "(string)",
                                                        "sourceAddressPrefix": "(string)",
                                                        "destinationAddressPrefix": "(string)",
                                                        "access": "(string)",
                                                        "priority": "(integer)",
                                                        "direction": "(string)",
                                                        "provisioningState": "(string)"
                                                    },
                                                    "name": "(string)",
                                                    "etag": "(string)"
                                                }
                                            ],
                                            "networkInterfaces": [
                                                {
                                                    "id": "(string)",
                                                    "name": "(string)",
                                                    "type": "(string)",
                                                    "location": "(string)",
                                                    "tags": {},
                                                    "properties": {
                                                        "virtualMachine": {
                                                            "id": "(string)"
                                                        },
                                                        "networkSecurityGroup": "(undefined)",
                                                        "ipConfigurations": [
                                                            {
                                                                "id": "(string)",
                                                                "properties": {
                                                                    "applicationGatewayBackendAddressPools": [
                                                                        {
                                                                            "id": "(string)",
                                                                            "properties": {
                                                                                "backendIPConfigurations": [
                                                                                    "(undefined)"
                                                                                ],
                                                                                "backendAddresses": [
                                                                                    {
                                                                                        "fqdn": "(string)",
                                                                                        "ipAddress": "(string)"
                                                                                    }
                                                                                ],
                                                                                "provisioningState": "(string)"
                                                                            },
                                                                            "name": "(string)",
                                                                            "etag": "(string)"
                                                                        }
                                                                    ],
                                                                    "loadBalancerBackendAddressPools": [
                                                                        {
                                                                            "id": "(string)",
                                                                            "properties": {
                                                                                "backendIPConfigurations": [
                                                                                    "(undefined)"
                                                                                ],
                                                                                "loadBalancingRules": [
                                                                                    {
                                                                                        "id": "(string)"
                                                                                    }
                                                                                ],
                                                                                "outboundNatRule": {
                                                                                    "id": "(string)"
                                                                                },
                                                                                "provisioningState": "(string)"
                                                                            },
                                                                            "name": "(string)",
                                                                            "etag": "(string)"
                                                                        }
                                                                    ],
                                                                    "loadBalancerInboundNatRules": [
                                                                        {
                                                                            "id": "(string)",
                                                                            "properties": {
                                                                                "frontendIPConfiguration": {
                                                                                    "id": "(string)"
                                                                                },
                                                                                "backendIPConfiguration": "(undefined)",
                                                                                "protocol": "(string)",
                                                                                "frontendPort": "(integer)",
                                                                                "backendPort": "(integer)",
                                                                                "idleTimeoutInMinutes": "(integer)",
                                                                                "enableFloatingIP": "(boolean)",
                                                                                "provisioningState": "(string)"
                                                                            },
                                                                            "name": "(string)",
                                                                            "etag": "(string)"
                                                                        }
                                                                    ],
                                                                    "privateIPAddress": "(string)",
                                                                    "privateIPAllocationMethod": "(string)",
                                                                    "privateIPAddressVersion": "(string)",
                                                                    "subnet": "(undefined)",
                                                                    "primary": "(boolean)",
                                                                    "publicIPAddress": {
                                                                        "id": "(string)",
                                                                        "name": "(string)",
                                                                        "type": "(string)",
                                                                        "location": "(string)",
                                                                        "tags": {},
                                                                        "properties": {
                                                                            "publicIPAllocationMethod": "(string)",
                                                                            "publicIPAddressVersion": "(string)",
                                                                            "ipConfiguration": "(undefined)",
                                                                            "dnsSettings": {
                                                                                "domainNameLabel": "(string)",
                                                                                "fqdn": "(string)",
                                                                                "reverseFqdn": "(string)"
                                                                            },
                                                                            "ipAddress": "(string)",
                                                                            "idleTimeoutInMinutes": "(integer)",
                                                                            "resourceGuid": "(string)",
                                                                            "provisioningState": "(string)"
                                                                        },
                                                                        "etag": "(string)"
                                                                    },
                                                                    "provisioningState": "(string)"
                                                                },
                                                                "name": "(string)",
                                                                "etag": "(string)"
                                                            }
                                                        ],
                                                        "dnsSettings": {
                                                            "dnsServers": [
                                                                "(string)"
                                                            ],
                                                            "appliedDnsServers": [
                                                                "(string)"
                                                            ],
                                                            "internalDnsNameLabel": "(string)",
                                                            "internalFqdn": "(string)",
                                                            "internalDomainNameSuffix": "(string)"
                                                        },
                                                        "macAddress": "(string)",
                                                        "primary": "(boolean)",
                                                        "enableAcceleratedNetworking": "(boolean)",
                                                        "enableIPForwarding": "(boolean)",
                                                        "resourceGuid": "(string)",
                                                        "provisioningState": "(string)"
                                                    },
                                                    "etag": "(string)"
                                                }
                                            ],
                                            "subnets": [
                                                "(undefined)"
                                            ],
                                            "resourceGuid": "(string)",
                                            "provisioningState": "(string)"
                                        },
                                        "etag": "(string)"
                                    },
                                    "routeTable": {
                                        "id": "(string)",
                                        "name": "(string)",
                                        "type": "(string)",
                                        "location": "(string)",
                                        "tags": {},
                                        "properties": {
                                            "routes": [
                                                {
                                                    "id": "(string)",
                                                    "properties": {
                                                        "addressPrefix": "(string)",
                                                        "nextHopType": "(string)",
                                                        "nextHopIpAddress": "(string)",
                                                        "provisioningState": "(string)"
                                                    },
                                                    "name": "(string)",
                                                    "etag": "(string)"
                                                }
                                            ],
                                            "subnets": [
                                                "(undefined)"
                                            ],
                                            "provisioningState": "(string)"
                                        },
                                        "etag": "(string)"
                                    },
                                    "ipConfigurations": [
                                        {
                                            "id": "(string)",
                                            "properties": {
                                                "privateIPAddress": "(string)",
                                                "privateIPAllocationMethod": "(string)",
                                                "subnet": "(undefined)",
                                                "publicIPAddress": {
                                                    "id": "(string)",
                                                    "name": "(string)",
                                                    "type": "(string)",
                                                    "location": "(string)",
                                                    "tags": {},
                                                    "properties": {
                                                        "publicIPAllocationMethod": "(string)",
                                                        "publicIPAddressVersion": "(string)",
                                                        "ipConfiguration": "(undefined)",
                                                        "dnsSettings": {
                                                            "domainNameLabel": "(string)",
                                                            "fqdn": "(string)",
                                                            "reverseFqdn": "(string)"
                                                        },
                                                        "ipAddress": "(string)",
                                                        "idleTimeoutInMinutes": "(integer)",
                                                        "resourceGuid": "(string)",
                                                        "provisioningState": "(string)"
                                                    },
                                                    "etag": "(string)"
                                                },
                                                "provisioningState": "(string)"
                                            },
                                            "name": "(string)",
                                            "etag": "(string)"
                                        }
                                    ],
                                    "resourceNavigationLinks": [
                                        {
                                            "id": "(string)",
                                            "properties": {
                                                "linkedResourceType": "(string)",
                                                "link": "(string)",
                                                "provisioningState": "(string)"
                                            },
                                            "name": "(string)",
                                            "etag": "(string)"
                                        }
                                    ],
                                    "provisioningState": "(string)"
                                },
                                "name": "(string)",
                                "etag": "(string)"
                            },
                            "publicIPAddress": {
                                "id": "(string)",
                                "name": "(string)",
                                "type": "(string)",
                                "location": "(string)",
                                "tags": {},
                                "properties": {
                                    "publicIPAllocationMethod": "(string)",
                                    "publicIPAddressVersion": "(string)",
                                    "ipConfiguration": "(undefined)",
                                    "dnsSettings": {
                                        "domainNameLabel": "(string)",
                                        "fqdn": "(string)",
                                        "reverseFqdn": "(string)"
                                    },
                                    "ipAddress": "(string)",
                                    "idleTimeoutInMinutes": "(integer)",
                                    "resourceGuid": "(string)",
                                    "provisioningState": "(string)"
                                },
                                "etag": "(string)"
                            },
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "backendAddressPools": [
                    {
                        "id": "(string)",
                        "properties": {
                            "backendIPConfigurations": [
                                "(undefined)"
                            ],
                            "loadBalancingRules": [
                                {
                                    "id": "(string)"
                                }
                            ],
                            "outboundNatRule": {
                                "id": "(string)"
                            },
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "id": "(string)",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "(string)"
                            },
                            "backendAddressPool": {
                                "id": "(string)"
                            },
                            "probe": {
                                "id": "(string)"
                            },
                            "protocol": "(string)",
                            "loadDistribution": "(string)",
                            "frontendPort": "(integer)",
                            "backendPort": "(integer)",
                            "idleTimeoutInMinutes": "(integer)",
                            "enableFloatingIP": "(boolean)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "probes": [
                    {
                        "id": "(string)",
                        "properties": {
                            "loadBalancingRules": [
                                {
                                    "id": "(string)"
                                }
                            ],
                            "protocol": "(string)",
                            "port": "(integer)",
                            "intervalInSeconds": "(integer)",
                            "numberOfProbes": "(integer)",
                            "requestPath": "(string)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "inboundNatRules": [
                    {
                        "id": "(string)",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "(string)"
                            },
                            "backendIPConfiguration": "(undefined)",
                            "protocol": "(string)",
                            "frontendPort": "(integer)",
                            "backendPort": "(integer)",
                            "idleTimeoutInMinutes": "(integer)",
                            "enableFloatingIP": "(boolean)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "inboundNatPools": [
                    {
                        "id": "(string)",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "(string)"
                            },
                            "protocol": "(string)",
                            "frontendPortRangeStart": "(integer)",
                            "frontendPortRangeEnd": "(integer)",
                            "backendPort": "(integer)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "outboundNatRules": [
                    {
                        "id": "(string)",
                        "properties": {
                            "allocatedOutboundPorts": "(integer)",
                            "frontendIPConfigurations": [
                                {
                                    "id": "(string)"
                                }
                            ],
                            "backendAddressPool": {
                                "id": "(string)"
                            },
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "resourceGuid": "(string)",
                "provisioningState": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "inboundNatRules": [
                                {
                                    "id": "Resource Id"
                                }
                            ],
                            "inboundNatPools": [
                                {
                                    "id": "Resource Id"
                                }
                            ],
                            "outboundNatRules": [
                                {
                                    "id": "Resource Id"
                                }
                            ],
                            "loadBalancingRules": [
                                {
                                    "id": "Resource Id"
                                }
                            ],
                            "privateIPAddress": "Gets or sets the privateIPAddress of the IP Configuration",
                            "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                            "subnet": {
                                "id": "Resource Id",
                                "properties": {
                                    "addressPrefix": "Gets or sets Address prefix for the subnet.",
                                    "networkSecurityGroup": {
                                        "id": "Resource Id",
                                        "name": "Resource name",
                                        "type": "Resource type",
                                        "location": "Resource location",
                                        "tags": {},
                                        "properties": {
                                            "securityRules": [
                                                {
                                                    "id": "Resource Id",
                                                    "properties": {
                                                        "description": "Gets or sets a description for this rule. Restricted to 140 chars.",
                                                        "protocol": "Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).",
                                                        "sourcePortRange": "Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                                        "destinationPortRange": "Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                                        "sourceAddressPrefix": "Gets or sets source address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                                                        "destinationAddressPrefix": "Gets or sets destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. ",
                                                        "access": "Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'",
                                                        "priority": "Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                                                        "direction": "Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outcoming traffic.",
                                                        "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                    },
                                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                                }
                                            ],
                                            "defaultSecurityRules": [
                                                {
                                                    "id": "Resource Id",
                                                    "properties": {
                                                        "description": "Gets or sets a description for this rule. Restricted to 140 chars.",
                                                        "protocol": "Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).",
                                                        "sourcePortRange": "Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                                        "destinationPortRange": "Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                                        "sourceAddressPrefix": "Gets or sets source address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                                                        "destinationAddressPrefix": "Gets or sets destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. ",
                                                        "access": "Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'",
                                                        "priority": "Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                                                        "direction": "Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outcoming traffic.",
                                                        "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                    },
                                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                                }
                                            ],
                                            "networkInterfaces": [
                                                {
                                                    "id": "Resource Id",
                                                    "name": "Resource name",
                                                    "type": "Resource type",
                                                    "location": "Resource location",
                                                    "tags": {},
                                                    "properties": {
                                                        "virtualMachine": {
                                                            "id": "Resource Id"
                                                        },
                                                        "networkSecurityGroup": "Gets or sets the reference of the NetworkSecurityGroup resource",
                                                        "ipConfigurations": [
                                                            {
                                                                "id": "Resource Id",
                                                                "properties": {
                                                                    "applicationGatewayBackendAddressPools": [
                                                                        {
                                                                            "id": "Resource Id",
                                                                            "properties": {
                                                                                "backendIPConfigurations": [
                                                                                    null
                                                                                ],
                                                                                "backendAddresses": [
                                                                                    {
                                                                                        "fqdn": "Dns name",
                                                                                        "ipAddress": "Ip address"
                                                                                    }
                                                                                ],
                                                                                "provisioningState": "Provisioning state of the backend address pool resource Updating/Deleting/Failed"
                                                                            },
                                                                            "name": "Resource that is unique within a resource group. This name can be used to access the resource",
                                                                            "etag": "A unique read-only string that changes whenever the resource is updated"
                                                                        }
                                                                    ],
                                                                    "loadBalancerBackendAddressPools": [
                                                                        {
                                                                            "id": "Resource Id",
                                                                            "properties": {
                                                                                "backendIPConfigurations": [
                                                                                    null
                                                                                ],
                                                                                "loadBalancingRules": [
                                                                                    {
                                                                                        "id": "Resource Id"
                                                                                    }
                                                                                ],
                                                                                "outboundNatRule": {
                                                                                    "id": "Resource Id"
                                                                                },
                                                                                "provisioningState": "Get provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                                            },
                                                                            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                                            "etag": "A unique read-only string that changes whenever the resource is updated"
                                                                        }
                                                                    ],
                                                                    "loadBalancerInboundNatRules": [
                                                                        {
                                                                            "id": "Resource Id",
                                                                            "properties": {
                                                                                "frontendIPConfiguration": {
                                                                                    "id": "Resource Id"
                                                                                },
                                                                                "backendIPConfiguration": "Gets or sets a reference to a private ip address defined on a NetworkInterface of a VM. Traffic sent to frontendPort of each of the frontendIPConfigurations is forwarded to the backed IP",
                                                                                "protocol": "Gets or sets the transport protocol for the endpoint. Possible values are Udp or Tcp",
                                                                                "frontendPort": "Gets or sets the port for the external endpoint. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive",
                                                                                "backendPort": "Gets or sets a port used for internal connections on the endpoint. The localPort attribute maps the eternal port of the endpoint to an internal port on a role. This is useful in scenarios where a role must communicate to an internal component on a port that is different from the one that is exposed externally. If not specified, the value of localPort is the same as the port attribute. Set the value of localPort to '*' to automatically assign an unallocated port that is discoverable using the runtime API",
                                                                                "idleTimeoutInMinutes": "Gets or sets the timeout for the Tcp idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to Tcp",
                                                                                "enableFloatingIP": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn availability Group. This setting is required when using the SQL Always ON availability Groups in SQL server. This setting can't be changed after you create the endpoint",
                                                                                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                                            },
                                                                            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                                            "etag": "A unique read-only string that changes whenever the resource is updated"
                                                                        }
                                                                    ],
                                                                    "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                                                                    "privateIPAddressVersion": "Gets or sets PrivateIP address version (IPv4/IPv6)",
                                                                    "primary": "Gets whether this is a primary customer address on the NIC",
                                                                    "publicIPAddress": {
                                                                        "id": "Resource Id",
                                                                        "name": "Resource name",
                                                                        "type": "Resource type",
                                                                        "location": "Resource location",
                                                                        "tags": {},
                                                                        "properties": {
                                                                            "publicIPAllocationMethod": "Gets or sets PublicIP allocation method (Static/Dynamic)",
                                                                            "publicIPAddressVersion": "Gets or sets PublicIP address version (IPv4/IPv6)",
                                                                            "dnsSettings": {
                                                                                "domainNameLabel": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
                                                                                "fqdn": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
                                                                                "reverseFqdn": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
                                                                            },
                                                                            "idleTimeoutInMinutes": "Gets or sets the Idletimeout of the public IP address",
                                                                            "resourceGuid": "Gets or sets resource guid property of the PublicIP resource",
                                                                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                                        },
                                                                        "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                                                                    }
                                                                },
                                                                "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                                "etag": "A unique read-only string that changes whenever the resource is updated"
                                                            }
                                                        ],
                                                        "dnsSettings": {
                                                            "dnsServers": [
                                                                null
                                                            ],
                                                            "appliedDnsServers": [
                                                                null
                                                            ],
                                                            "internalDnsNameLabel": "Gets or sets the internal DNS name",
                                                            "internalFqdn": "Gets or sets the internal fqdn.",
                                                            "internalDomainNameSuffix": "Gets or sets internal domain name suffix of the NIC."
                                                        },
                                                        "macAddress": "Gets the MAC address of the network interface",
                                                        "primary": "Gets whether this is a primary NIC on a virtual machine",
                                                        "enableAcceleratedNetworking": "Gets or sets if the network interface is accelerated networking enabled",
                                                        "enableIPForwarding": "Gets or sets whether IPForwarding is enabled on the NIC",
                                                        "resourceGuid": "Gets or sets resource guid property of the network interface resource",
                                                        "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                    },
                                                    "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                                                }
                                            ],
                                            "subnets": [
                                                null
                                            ],
                                            "resourceGuid": "Gets or sets resource guid property of the network security group resource",
                                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                        },
                                        "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                                    },
                                    "routeTable": {
                                        "id": "Resource Id",
                                        "name": "Resource name",
                                        "type": "Resource type",
                                        "location": "Resource location",
                                        "tags": {},
                                        "properties": {
                                            "routes": [
                                                {
                                                    "id": "Resource Id",
                                                    "properties": {
                                                        "addressPrefix": "Gets or sets the destination CIDR to which the route applies.",
                                                        "nextHopType": "Gets or sets the type of Azure hop the packet should be sent to.",
                                                        "nextHopIpAddress": "Gets or sets the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
                                                        "provisioningState": "Gets provisioning state of the resource Updating/Deleting/Failed"
                                                    },
                                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                                }
                                            ],
                                            "subnets": [
                                                null
                                            ],
                                            "provisioningState": "Gets provisioning state of the resource Updating/Deleting/Failed"
                                        },
                                        "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                                    },
                                    "ipConfigurations": [
                                        {
                                            "id": "Resource Id",
                                            "properties": {
                                                "privateIPAddress": "Gets or sets the privateIPAddress of the IP Configuration",
                                                "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                                                "subnet": "Gets or sets the reference of the subnet resource",
                                                "publicIPAddress": {
                                                    "id": "Resource Id",
                                                    "name": "Resource name",
                                                    "type": "Resource type",
                                                    "location": "Resource location",
                                                    "tags": {},
                                                    "properties": {
                                                        "publicIPAllocationMethod": "Gets or sets PublicIP allocation method (Static/Dynamic)",
                                                        "publicIPAddressVersion": "Gets or sets PublicIP address version (IPv4/IPv6)",
                                                        "dnsSettings": {
                                                            "domainNameLabel": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
                                                            "fqdn": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
                                                            "reverseFqdn": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
                                                        },
                                                        "idleTimeoutInMinutes": "Gets or sets the Idletimeout of the public IP address",
                                                        "resourceGuid": "Gets or sets resource guid property of the PublicIP resource",
                                                        "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                    },
                                                    "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                                                },
                                                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                            },
                                            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                            "etag": "A unique read-only string that changes whenever the resource is updated"
                                        }
                                    ],
                                    "resourceNavigationLinks": [
                                        {
                                            "id": "Resource Id",
                                            "properties": {
                                                "linkedResourceType": "Resource type of the linked resource",
                                                "link": "Link to the external resource",
                                                "provisioningState": "Provisioning state of the ResourceNavigationLink resource"
                                            },
                                            "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                                            "etag": "A unique read-only string that changes whenever the resource is updated"
                                        }
                                    ],
                                    "provisioningState": "Gets provisioning state of the resource"
                                },
                                "name": "Gets or sets the name of the resource that is unique within a resource group. This name can be used to access the resource",
                                "etag": "A unique read-only string that changes whenever the resource is updated"
                            },
                            "publicIPAddress": {
                                "id": "Resource Id",
                                "name": "Resource name",
                                "type": "Resource type",
                                "location": "Resource location",
                                "tags": {},
                                "properties": {
                                    "publicIPAllocationMethod": "Gets or sets PublicIP allocation method (Static/Dynamic)",
                                    "publicIPAddressVersion": "Gets or sets PublicIP address version (IPv4/IPv6)",
                                    "dnsSettings": {
                                        "domainNameLabel": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
                                        "fqdn": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
                                        "reverseFqdn": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
                                    },
                                    "idleTimeoutInMinutes": "Gets or sets the Idletimeout of the public IP address",
                                    "resourceGuid": "Gets or sets resource guid property of the PublicIP resource",
                                    "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                },
                                "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                            },
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "backendAddressPools": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "backendIPConfigurations": [
                                null
                            ],
                            "loadBalancingRules": [
                                {
                                    "id": "Resource Id"
                                }
                            ],
                            "outboundNatRule": {
                                "id": "Resource Id"
                            },
                            "provisioningState": "Get provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "Resource Id"
                            },
                            "backendAddressPool": {
                                "id": "Resource Id"
                            },
                            "probe": {
                                "id": "Resource Id"
                            },
                            "protocol": "Gets or sets the transport protocol for the external endpoint. Possible values are Udp or Tcp",
                            "loadDistribution": "Gets or sets the load distribution policy for this rule",
                            "frontendPort": "Gets or sets the port for the external endpoint. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive",
                            "backendPort": "Gets or sets a port used for internal connections on the endpoint. The localPort attribute maps the eternal port of the endpoint to an internal port on a role. This is useful in scenarios where a role must communicate to an internal component on a port that is different from the one that is exposed externally. If not specified, the value of localPort is the same as the port attribute. Set the value of localPort to '*' to automatically assign an unallocated port that is discoverable using the runtime API",
                            "idleTimeoutInMinutes": "Gets or sets the timeout for the Tcp idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to Tcp",
                            "enableFloatingIP": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn availability Group. This setting is required when using the SQL Always ON availability Groups in SQL server. This setting can't be changed after you create the endpoint",
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "probes": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "loadBalancingRules": [
                                {
                                    "id": "Resource Id"
                                }
                            ],
                            "protocol": "Gets or sets the protocol of the end point. Possible values are http or Tcp. If Tcp is specified, a received ACK is required for the probe to be successful. If http is specified,a 200 OK response from the specifies URI is required for the probe to be successful",
                            "port": "Gets or sets Port for communicating the probe. Possible values range from 1 to 65535, inclusive.",
                            "intervalInSeconds": "Gets or sets the interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5",
                            "numberOfProbes": "Gets or sets the number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure. ",
                            "requestPath": "Gets or sets the URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value",
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "inboundNatRules": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "Resource Id"
                            },
                            "backendIPConfiguration": "Gets or sets a reference to a private ip address defined on a NetworkInterface of a VM. Traffic sent to frontendPort of each of the frontendIPConfigurations is forwarded to the backed IP",
                            "protocol": "Gets or sets the transport protocol for the endpoint. Possible values are Udp or Tcp",
                            "frontendPort": "Gets or sets the port for the external endpoint. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive",
                            "backendPort": "Gets or sets a port used for internal connections on the endpoint. The localPort attribute maps the eternal port of the endpoint to an internal port on a role. This is useful in scenarios where a role must communicate to an internal component on a port that is different from the one that is exposed externally. If not specified, the value of localPort is the same as the port attribute. Set the value of localPort to '*' to automatically assign an unallocated port that is discoverable using the runtime API",
                            "idleTimeoutInMinutes": "Gets or sets the timeout for the Tcp idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to Tcp",
                            "enableFloatingIP": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn availability Group. This setting is required when using the SQL Always ON availability Groups in SQL server. This setting can't be changed after you create the endpoint",
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "inboundNatPools": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "Resource Id"
                            },
                            "protocol": "Gets or sets the transport protocol for the endpoint. Possible values are Udp or Tcp",
                            "frontendPortRangeStart": "Gets or sets the starting port range for the NAT pool. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive",
                            "frontendPortRangeEnd": "Gets or sets the ending port range for the NAT pool. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive",
                            "backendPort": "Gets or sets a port used for internal connections on the endpoint. The localPort attribute maps the eternal port of the endpoint to an internal port on a role. This is useful in scenarios where a role must communicate to an internal component on a port that is different from the one that is exposed externally. If not specified, the value of localPort is the same as the port attribute. Set the value of localPort to '*' to automatically assign an unallocated port that is discoverable using the runtime API",
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "outboundNatRules": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "allocatedOutboundPorts": "Gets or sets the number of outbound ports to be used for SNAT",
                            "frontendIPConfigurations": [
                                {
                                    "id": "Resource Id"
                                }
                            ],
                            "backendAddressPool": {
                                "id": "Resource Id"
                            },
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "resourceGuid": "Gets or sets resource guid property of the Load balancer resource",
                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
            },
            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "(string)"
                    ]
                },
                "gatewayIpAddress": "(string)",
                "bgpSettings": {
                    "asn": "(integer)",
                    "bgpPeeringAddress": "(string)",
                    "peerWeight": "(integer)"
                },
                "resourceGuid": "(string)",
                "provisioningState": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        null
                    ]
                },
                "gatewayIpAddress": "IP address of local network gateway.",
                "bgpSettings": {
                    "asn": "Gets or sets this BGP speaker's ASN",
                    "bgpPeeringAddress": "Gets or sets the BGP peering address and BGP identifier of this BGP speaker",
                    "peerWeight": "Gets or sets the weight added to routes learned from this BGP speaker"
                },
                "resourceGuid": "Gets or sets resource guid property of the LocalNetworkGateway resource",
                "provisioningState": "Gets provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed"
            },
            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "virtualMachine": {
                    "id": "(string)"
                },
                "networkSecurityGroup": "(undefined)",
                "ipConfigurations": [
                    {
                        "id": "(string)",
                        "properties": {
                            "applicationGatewayBackendAddressPools": [
                                {
                                    "id": "(string)",
                                    "properties": {
                                        "backendIPConfigurations": [
                                            "(undefined)"
                                        ],
                                        "backendAddresses": [
                                            {
                                                "fqdn": "(string)",
                                                "ipAddress": "(string)"
                                            }
                                        ],
                                        "provisioningState": "(string)"
                                    },
                                    "name": "(string)",
                                    "etag": "(string)"
                                }
                            ],
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "(string)",
                                    "properties": {
                                        "backendIPConfigurations": [
                                            "(undefined)"
                                        ],
                                        "loadBalancingRules": [
                                            {
                                                "id": "(string)"
                                            }
                                        ],
                                        "outboundNatRule": {
                                            "id": "(string)"
                                        },
                                        "provisioningState": "(string)"
                                    },
                                    "name": "(string)",
                                    "etag": "(string)"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "(string)",
                                    "properties": {
                                        "frontendIPConfiguration": {
                                            "id": "(string)"
                                        },
                                        "backendIPConfiguration": "(undefined)",
                                        "protocol": "(string)",
                                        "frontendPort": "(integer)",
                                        "backendPort": "(integer)",
                                        "idleTimeoutInMinutes": "(integer)",
                                        "enableFloatingIP": "(boolean)",
                                        "provisioningState": "(string)"
                                    },
                                    "name": "(string)",
                                    "etag": "(string)"
                                }
                            ],
                            "privateIPAddress": "(string)",
                            "privateIPAllocationMethod": "(string)",
                            "privateIPAddressVersion": "(string)",
                            "subnet": "(undefined)",
                            "primary": "(boolean)",
                            "publicIPAddress": {
                                "id": "(string)",
                                "name": "(string)",
                                "type": "(string)",
                                "location": "(string)",
                                "tags": {},
                                "properties": {
                                    "publicIPAllocationMethod": "(string)",
                                    "publicIPAddressVersion": "(string)",
                                    "ipConfiguration": "(undefined)",
                                    "dnsSettings": {
                                        "domainNameLabel": "(string)",
                                        "fqdn": "(string)",
                                        "reverseFqdn": "(string)"
                                    },
                                    "ipAddress": "(string)",
                                    "idleTimeoutInMinutes": "(integer)",
                                    "resourceGuid": "(string)",
                                    "provisioningState": "(string)"
                                },
                                "etag": "(string)"
                            },
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "(string)"
                    ],
                    "appliedDnsServers": [
                        "(string)"
                    ],
                    "internalDnsNameLabel": "(string)",
                    "internalFqdn": "(string)",
                    "internalDomainNameSuffix": "(string)"
                },
                "macAddress": "(string)",
                "primary": "(boolean)",
                "enableAcceleratedNetworking": "(boolean)",
                "enableIPForwarding": "(boolean)",
                "resourceGuid": "(string)",
                "provisioningState": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "virtualMachine": {
                    "id": "Resource Id"
                },
                "networkSecurityGroup": "Gets or sets the reference of the NetworkSecurityGroup resource",
                "ipConfigurations": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "applicationGatewayBackendAddressPools": [
                                {
                                    "id": "Resource Id",
                                    "properties": {
                                        "backendIPConfigurations": [
                                            null
                                        ],
                                        "backendAddresses": [
                                            {
                                                "fqdn": "Dns name",
                                                "ipAddress": "Ip address"
                                            }
                                        ],
                                        "provisioningState": "Provisioning state of the backend address pool resource Updating/Deleting/Failed"
                                    },
                                    "name": "Resource that is unique within a resource group. This name can be used to access the resource",
                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                }
                            ],
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "Resource Id",
                                    "properties": {
                                        "backendIPConfigurations": [
                                            null
                                        ],
                                        "loadBalancingRules": [
                                            {
                                                "id": "Resource Id"
                                            }
                                        ],
                                        "outboundNatRule": {
                                            "id": "Resource Id"
                                        },
                                        "provisioningState": "Get provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                    },
                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "Resource Id",
                                    "properties": {
                                        "frontendIPConfiguration": {
                                            "id": "Resource Id"
                                        },
                                        "backendIPConfiguration": "Gets or sets a reference to a private ip address defined on a NetworkInterface of a VM. Traffic sent to frontendPort of each of the frontendIPConfigurations is forwarded to the backed IP",
                                        "protocol": "Gets or sets the transport protocol for the endpoint. Possible values are Udp or Tcp",
                                        "frontendPort": "Gets or sets the port for the external endpoint. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive",
                                        "backendPort": "Gets or sets a port used for internal connections on the endpoint. The localPort attribute maps the eternal port of the endpoint to an internal port on a role. This is useful in scenarios where a role must communicate to an internal component on a port that is different from the one that is exposed externally. If not specified, the value of localPort is the same as the port attribute. Set the value of localPort to '*' to automatically assign an unallocated port that is discoverable using the runtime API",
                                        "idleTimeoutInMinutes": "Gets or sets the timeout for the Tcp idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to Tcp",
                                        "enableFloatingIP": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn availability Group. This setting is required when using the SQL Always ON availability Groups in SQL server. This setting can't be changed after you create the endpoint",
                                        "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                    },
                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                }
                            ],
                            "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                            "privateIPAddressVersion": "Gets or sets PrivateIP address version (IPv4/IPv6)",
                            "primary": "Gets whether this is a primary customer address on the NIC",
                            "publicIPAddress": {
                                "id": "Resource Id",
                                "name": "Resource name",
                                "type": "Resource type",
                                "location": "Resource location",
                                "tags": {},
                                "properties": {
                                    "publicIPAllocationMethod": "Gets or sets PublicIP allocation method (Static/Dynamic)",
                                    "publicIPAddressVersion": "Gets or sets PublicIP address version (IPv4/IPv6)",
                                    "dnsSettings": {
                                        "domainNameLabel": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
                                        "fqdn": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
                                        "reverseFqdn": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
                                    },
                                    "idleTimeoutInMinutes": "Gets or sets the Idletimeout of the public IP address",
                                    "resourceGuid": "Gets or sets resource guid property of the PublicIP resource",
                                    "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                },
                                "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                            }
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        null
                    ],
                    "appliedDnsServers": [
                        null
                    ],
                    "internalDnsNameLabel": "Gets or sets the internal DNS name",
                    "internalFqdn": "Gets or sets the internal fqdn.",
                    "internalDomainNameSuffix": "Gets or sets internal domain name suffix of the NIC."
                },
                "macAddress": "Gets the MAC address of the network interface",
                "primary": "Gets whether this is a primary NIC on a virtual machine",
                "enableAcceleratedNetworking": "Gets or sets if the network interface is accelerated networking enabled",
                "enableIPForwarding": "Gets or sets whether IPForwarding is enabled on the NIC",
                "resourceGuid": "Gets or sets resource guid property of the network interface resource",
                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
            },
            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/networkInterfaces",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveRouteTable",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveNetworkSecurityGroups",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "securityRules": [
                    {
                        "id": "(string)",
                        "properties": {
                            "description": "(string)",
                            "protocol": "(string)",
                            "sourcePortRange": "(string)",
                            "destinationPortRange": "(string)",
                            "sourceAddressPrefix": "(string)",
                            "destinationAddressPrefix": "(string)",
                            "access": "(string)",
                            "priority": "(integer)",
                            "direction": "(string)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "id": "(string)",
                        "properties": {
                            "description": "(string)",
                            "protocol": "(string)",
                            "sourcePortRange": "(string)",
                            "destinationPortRange": "(string)",
                            "sourceAddressPrefix": "(string)",
                            "destinationAddressPrefix": "(string)",
                            "access": "(string)",
                            "priority": "(integer)",
                            "direction": "(string)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "networkInterfaces": [
                    {
                        "id": "(string)",
                        "name": "(string)",
                        "type": "(string)",
                        "location": "(string)",
                        "tags": {},
                        "properties": {
                            "virtualMachine": {
                                "id": "(string)"
                            },
                            "networkSecurityGroup": "(undefined)",
                            "ipConfigurations": [
                                {
                                    "id": "(string)",
                                    "properties": {
                                        "applicationGatewayBackendAddressPools": [
                                            {
                                                "id": "(string)",
                                                "properties": {
                                                    "backendIPConfigurations": [
                                                        "(undefined)"
                                                    ],
                                                    "backendAddresses": [
                                                        {
                                                            "fqdn": "(string)",
                                                            "ipAddress": "(string)"
                                                        }
                                                    ],
                                                    "provisioningState": "(string)"
                                                },
                                                "name": "(string)",
                                                "etag": "(string)"
                                            }
                                        ],
                                        "loadBalancerBackendAddressPools": [
                                            {
                                                "id": "(string)",
                                                "properties": {
                                                    "backendIPConfigurations": [
                                                        "(undefined)"
                                                    ],
                                                    "loadBalancingRules": [
                                                        {
                                                            "id": "(string)"
                                                        }
                                                    ],
                                                    "outboundNatRule": {
                                                        "id": "(string)"
                                                    },
                                                    "provisioningState": "(string)"
                                                },
                                                "name": "(string)",
                                                "etag": "(string)"
                                            }
                                        ],
                                        "loadBalancerInboundNatRules": [
                                            {
                                                "id": "(string)",
                                                "properties": {
                                                    "frontendIPConfiguration": {
                                                        "id": "(string)"
                                                    },
                                                    "backendIPConfiguration": "(undefined)",
                                                    "protocol": "(string)",
                                                    "frontendPort": "(integer)",
                                                    "backendPort": "(integer)",
                                                    "idleTimeoutInMinutes": "(integer)",
                                                    "enableFloatingIP": "(boolean)",
                                                    "provisioningState": "(string)"
                                                },
                                                "name": "(string)",
                                                "etag": "(string)"
                                            }
                                        ],
                                        "privateIPAddress": "(string)",
                                        "privateIPAllocationMethod": "(string)",
                                        "privateIPAddressVersion": "(string)",
                                        "subnet": "(undefined)",
                                        "primary": "(boolean)",
                                        "publicIPAddress": {
                                            "id": "(string)",
                                            "name": "(string)",
                                            "type": "(string)",
                                            "location": "(string)",
                                            "tags": {},
                                            "properties": {
                                                "publicIPAllocationMethod": "(string)",
                                                "publicIPAddressVersion": "(string)",
                                                "ipConfiguration": "(undefined)",
                                                "dnsSettings": {
                                                    "domainNameLabel": "(string)",
                                                    "fqdn": "(string)",
                                                    "reverseFqdn": "(string)"
                                                },
                                                "ipAddress": "(string)",
                                                "idleTimeoutInMinutes": "(integer)",
                                                "resourceGuid": "(string)",
                                                "provisioningState": "(string)"
                                            },
                                            "etag": "(string)"
                                        },
                                        "provisioningState": "(string)"
                                    },
                                    "name": "(string)",
                                    "etag": "(string)"
                                }
                            ],
                            "dnsSettings": {
                                "dnsServers": [
                                    "(string)"
                                ],
                                "appliedDnsServers": [
                                    "(string)"
                                ],
                                "internalDnsNameLabel": "(string)",
                                "internalFqdn": "(string)",
                                "internalDomainNameSuffix": "(string)"
                            },
                            "macAddress": "(string)",
                            "primary": "(boolean)",
                            "enableAcceleratedNetworking": "(boolean)",
                            "enableIPForwarding": "(boolean)",
                            "resourceGuid": "(string)",
                            "provisioningState": "(string)"
                        },
                        "etag": "(string)"
                    }
                ],
                "subnets": [
                    "(undefined)"
                ],
                "resourceGuid": "(string)",
                "provisioningState": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "securityRules": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "description": "Gets or sets a description for this rule. Restricted to 140 chars.",
                            "protocol": "Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).",
                            "sourcePortRange": "Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                            "destinationPortRange": "Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                            "sourceAddressPrefix": "Gets or sets source address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                            "destinationAddressPrefix": "Gets or sets destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. ",
                            "access": "Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'",
                            "priority": "Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "direction": "Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outcoming traffic.",
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "description": "Gets or sets a description for this rule. Restricted to 140 chars.",
                            "protocol": "Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).",
                            "sourcePortRange": "Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                            "destinationPortRange": "Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                            "sourceAddressPrefix": "Gets or sets source address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                            "destinationAddressPrefix": "Gets or sets destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. ",
                            "access": "Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'",
                            "priority": "Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "direction": "Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outcoming traffic.",
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "networkInterfaces": [
                    {
                        "id": "Resource Id",
                        "name": "Resource name",
                        "type": "Resource type",
                        "location": "Resource location",
                        "tags": {},
                        "properties": {
                            "virtualMachine": {
                                "id": "Resource Id"
                            },
                            "networkSecurityGroup": "Gets or sets the reference of the NetworkSecurityGroup resource",
                            "ipConfigurations": [
                                {
                                    "id": "Resource Id",
                                    "properties": {
                                        "applicationGatewayBackendAddressPools": [
                                            {
                                                "id": "Resource Id",
                                                "properties": {
                                                    "backendIPConfigurations": [
                                                        null
                                                    ],
                                                    "backendAddresses": [
                                                        {
                                                            "fqdn": "Dns name",
                                                            "ipAddress": "Ip address"
                                                        }
                                                    ],
                                                    "provisioningState": "Provisioning state of the backend address pool resource Updating/Deleting/Failed"
                                                },
                                                "name": "Resource that is unique within a resource group. This name can be used to access the resource",
                                                "etag": "A unique read-only string that changes whenever the resource is updated"
                                            }
                                        ],
                                        "loadBalancerBackendAddressPools": [
                                            {
                                                "id": "Resource Id",
                                                "properties": {
                                                    "backendIPConfigurations": [
                                                        null
                                                    ],
                                                    "loadBalancingRules": [
                                                        {
                                                            "id": "Resource Id"
                                                        }
                                                    ],
                                                    "outboundNatRule": {
                                                        "id": "Resource Id"
                                                    },
                                                    "provisioningState": "Get provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                },
                                                "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                "etag": "A unique read-only string that changes whenever the resource is updated"
                                            }
                                        ],
                                        "loadBalancerInboundNatRules": [
                                            {
                                                "id": "Resource Id",
                                                "properties": {
                                                    "frontendIPConfiguration": {
                                                        "id": "Resource Id"
                                                    },
                                                    "backendIPConfiguration": "Gets or sets a reference to a private ip address defined on a NetworkInterface of a VM. Traffic sent to frontendPort of each of the frontendIPConfigurations is forwarded to the backed IP",
                                                    "protocol": "Gets or sets the transport protocol for the endpoint. Possible values are Udp or Tcp",
                                                    "frontendPort": "Gets or sets the port for the external endpoint. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive",
                                                    "backendPort": "Gets or sets a port used for internal connections on the endpoint. The localPort attribute maps the eternal port of the endpoint to an internal port on a role. This is useful in scenarios where a role must communicate to an internal component on a port that is different from the one that is exposed externally. If not specified, the value of localPort is the same as the port attribute. Set the value of localPort to '*' to automatically assign an unallocated port that is discoverable using the runtime API",
                                                    "idleTimeoutInMinutes": "Gets or sets the timeout for the Tcp idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to Tcp",
                                                    "enableFloatingIP": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn availability Group. This setting is required when using the SQL Always ON availability Groups in SQL server. This setting can't be changed after you create the endpoint",
                                                    "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                },
                                                "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                "etag": "A unique read-only string that changes whenever the resource is updated"
                                            }
                                        ],
                                        "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                                        "privateIPAddressVersion": "Gets or sets PrivateIP address version (IPv4/IPv6)",
                                        "primary": "Gets whether this is a primary customer address on the NIC",
                                        "publicIPAddress": {
                                            "id": "Resource Id",
                                            "name": "Resource name",
                                            "type": "Resource type",
                                            "location": "Resource location",
                                            "tags": {},
                                            "properties": {
                                                "publicIPAllocationMethod": "Gets or sets PublicIP allocation method (Static/Dynamic)",
                                                "publicIPAddressVersion": "Gets or sets PublicIP address version (IPv4/IPv6)",
                                                "dnsSettings": {
                                                    "domainNameLabel": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
                                                    "fqdn": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
                                                    "reverseFqdn": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
                                                },
                                                "idleTimeoutInMinutes": "Gets or sets the Idletimeout of the public IP address",
                                                "resourceGuid": "Gets or sets resource guid property of the PublicIP resource",
                                                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                            },
                                            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                                        }
                                    },
                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                }
                            ],
                            "dnsSettings": {
                                "dnsServers": [
                                    null
                                ],
                                "appliedDnsServers": [
                                    null
                                ],
                                "internalDnsNameLabel": "Gets or sets the internal DNS name",
                                "internalFqdn": "Gets or sets the internal fqdn.",
                                "internalDomainNameSuffix": "Gets or sets internal domain name suffix of the NIC."
                            },
                            "macAddress": "Gets the MAC address of the network interface",
                            "primary": "Gets whether this is a primary NIC on a virtual machine",
                            "enableAcceleratedNetworking": "Gets or sets if the network interface is accelerated networking enabled",
                            "enableIPForwarding": "Gets or sets whether IPForwarding is enabled on the NIC",
                            "resourceGuid": "Gets or sets resource guid property of the network interface resource",
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "subnets": [
                    null
                ],
                "resourceGuid": "Gets or sets resource guid property of the network security group resource",
                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
            },
            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "publicIPAllocationMethod": "(string)",
                "publicIPAddressVersion": "(string)",
                "ipConfiguration": "(undefined)",
                "dnsSettings": {
                    "domainNameLabel": "(string)",
                    "fqdn": "(string)",
                    "reverseFqdn": "(string)"
                },
                "ipAddress": "(string)",
                "idleTimeoutInMinutes": "(integer)",
                "resourceGuid": "(string)",
                "provisioningState": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "publicIPAllocationMethod": "Gets or sets PublicIP allocation method (Static/Dynamic)",
                "publicIPAddressVersion": "Gets or sets PublicIP address version (IPv4/IPv6)",
                "dnsSettings": {
                    "domainNameLabel": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
                    "fqdn": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
                    "reverseFqdn": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
                },
                "idleTimeoutInMinutes": "Gets or sets the Idletimeout of the public IP address",
                "resourceGuid": "Gets or sets resource guid property of the PublicIP resource",
                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
            },
            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPAddresses",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "routes": [
                    {
                        "id": "(string)",
                        "properties": {
                            "addressPrefix": "(string)",
                            "nextHopType": "(string)",
                            "nextHopIpAddress": "(string)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "subnets": [
                    "(undefined)"
                ],
                "provisioningState": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "routes": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "addressPrefix": "Gets or sets the destination CIDR to which the route applies.",
                            "nextHopType": "Gets or sets the type of Azure hop the packet should be sent to.",
                            "nextHopIpAddress": "Gets or sets the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
                            "provisioningState": "Gets provisioning state of the resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "subnets": [
                    null
                ],
                "provisioningState": "Gets provisioning state of the resource Updating/Deleting/Failed"
            },
            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",
        "RequestBody": {
            "id": "(string)",
            "properties": {
                "addressPrefix": "(string)",
                "nextHopType": "(string)",
                "nextHopIpAddress": "(string)",
                "provisioningState": "(string)"
            },
            "name": "(string)",
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "properties": {
                "addressPrefix": "Gets or sets the destination CIDR to which the route applies.",
                "nextHopType": "Gets or sets the type of Azure hop the packet should be sent to.",
                "nextHopIpAddress": "Gets or sets the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
                "provisioningState": "Gets provisioning state of the resource Updating/Deleting/Failed"
            },
            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
            "etag": "A unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}",
        "RequestBody": {
            "id": "(string)",
            "properties": {
                "description": "(string)",
                "protocol": "(string)",
                "sourcePortRange": "(string)",
                "destinationPortRange": "(string)",
                "sourceAddressPrefix": "(string)",
                "destinationAddressPrefix": "(string)",
                "access": "(string)",
                "priority": "(integer)",
                "direction": "(string)",
                "provisioningState": "(string)"
            },
            "name": "(string)",
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "properties": {
                "description": "Gets or sets a description for this rule. Restricted to 140 chars.",
                "protocol": "Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).",
                "sourcePortRange": "Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                "destinationPortRange": "Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                "sourceAddressPrefix": "Gets or sets source address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                "destinationAddressPrefix": "Gets or sets destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. ",
                "access": "Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'",
                "priority": "Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                "direction": "Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outcoming traffic.",
                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
            },
            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
            "etag": "A unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
        "RequestBody": {
            "id": "(string)",
            "properties": {
                "addressPrefix": "(string)",
                "networkSecurityGroup": {
                    "id": "(string)",
                    "name": "(string)",
                    "type": "(string)",
                    "location": "(string)",
                    "tags": {},
                    "properties": {
                        "securityRules": [
                            {
                                "id": "(string)",
                                "properties": {
                                    "description": "(string)",
                                    "protocol": "(string)",
                                    "sourcePortRange": "(string)",
                                    "destinationPortRange": "(string)",
                                    "sourceAddressPrefix": "(string)",
                                    "destinationAddressPrefix": "(string)",
                                    "access": "(string)",
                                    "priority": "(integer)",
                                    "direction": "(string)",
                                    "provisioningState": "(string)"
                                },
                                "name": "(string)",
                                "etag": "(string)"
                            }
                        ],
                        "defaultSecurityRules": [
                            {
                                "id": "(string)",
                                "properties": {
                                    "description": "(string)",
                                    "protocol": "(string)",
                                    "sourcePortRange": "(string)",
                                    "destinationPortRange": "(string)",
                                    "sourceAddressPrefix": "(string)",
                                    "destinationAddressPrefix": "(string)",
                                    "access": "(string)",
                                    "priority": "(integer)",
                                    "direction": "(string)",
                                    "provisioningState": "(string)"
                                },
                                "name": "(string)",
                                "etag": "(string)"
                            }
                        ],
                        "networkInterfaces": [
                            {
                                "id": "(string)",
                                "name": "(string)",
                                "type": "(string)",
                                "location": "(string)",
                                "tags": {},
                                "properties": {
                                    "virtualMachine": {
                                        "id": "(string)"
                                    },
                                    "networkSecurityGroup": "(undefined)",
                                    "ipConfigurations": [
                                        {
                                            "id": "(string)",
                                            "properties": {
                                                "applicationGatewayBackendAddressPools": [
                                                    {
                                                        "id": "(string)",
                                                        "properties": {
                                                            "backendIPConfigurations": [
                                                                "(undefined)"
                                                            ],
                                                            "backendAddresses": [
                                                                {
                                                                    "fqdn": "(string)",
                                                                    "ipAddress": "(string)"
                                                                }
                                                            ],
                                                            "provisioningState": "(string)"
                                                        },
                                                        "name": "(string)",
                                                        "etag": "(string)"
                                                    }
                                                ],
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "(string)",
                                                        "properties": {
                                                            "backendIPConfigurations": [
                                                                "(undefined)"
                                                            ],
                                                            "loadBalancingRules": [
                                                                {
                                                                    "id": "(string)"
                                                                }
                                                            ],
                                                            "outboundNatRule": {
                                                                "id": "(string)"
                                                            },
                                                            "provisioningState": "(string)"
                                                        },
                                                        "name": "(string)",
                                                        "etag": "(string)"
                                                    }
                                                ],
                                                "loadBalancerInboundNatRules": [
                                                    {
                                                        "id": "(string)",
                                                        "properties": {
                                                            "frontendIPConfiguration": {
                                                                "id": "(string)"
                                                            },
                                                            "backendIPConfiguration": "(undefined)",
                                                            "protocol": "(string)",
                                                            "frontendPort": "(integer)",
                                                            "backendPort": "(integer)",
                                                            "idleTimeoutInMinutes": "(integer)",
                                                            "enableFloatingIP": "(boolean)",
                                                            "provisioningState": "(string)"
                                                        },
                                                        "name": "(string)",
                                                        "etag": "(string)"
                                                    }
                                                ],
                                                "privateIPAddress": "(string)",
                                                "privateIPAllocationMethod": "(string)",
                                                "privateIPAddressVersion": "(string)",
                                                "subnet": "(undefined)",
                                                "primary": "(boolean)",
                                                "publicIPAddress": {
                                                    "id": "(string)",
                                                    "name": "(string)",
                                                    "type": "(string)",
                                                    "location": "(string)",
                                                    "tags": {},
                                                    "properties": {
                                                        "publicIPAllocationMethod": "(string)",
                                                        "publicIPAddressVersion": "(string)",
                                                        "ipConfiguration": "(undefined)",
                                                        "dnsSettings": {
                                                            "domainNameLabel": "(string)",
                                                            "fqdn": "(string)",
                                                            "reverseFqdn": "(string)"
                                                        },
                                                        "ipAddress": "(string)",
                                                        "idleTimeoutInMinutes": "(integer)",
                                                        "resourceGuid": "(string)",
                                                        "provisioningState": "(string)"
                                                    },
                                                    "etag": "(string)"
                                                },
                                                "provisioningState": "(string)"
                                            },
                                            "name": "(string)",
                                            "etag": "(string)"
                                        }
                                    ],
                                    "dnsSettings": {
                                        "dnsServers": [
                                            "(string)"
                                        ],
                                        "appliedDnsServers": [
                                            "(string)"
                                        ],
                                        "internalDnsNameLabel": "(string)",
                                        "internalFqdn": "(string)",
                                        "internalDomainNameSuffix": "(string)"
                                    },
                                    "macAddress": "(string)",
                                    "primary": "(boolean)",
                                    "enableAcceleratedNetworking": "(boolean)",
                                    "enableIPForwarding": "(boolean)",
                                    "resourceGuid": "(string)",
                                    "provisioningState": "(string)"
                                },
                                "etag": "(string)"
                            }
                        ],
                        "subnets": [
                            "(undefined)"
                        ],
                        "resourceGuid": "(string)",
                        "provisioningState": "(string)"
                    },
                    "etag": "(string)"
                },
                "routeTable": {
                    "id": "(string)",
                    "name": "(string)",
                    "type": "(string)",
                    "location": "(string)",
                    "tags": {},
                    "properties": {
                        "routes": [
                            {
                                "id": "(string)",
                                "properties": {
                                    "addressPrefix": "(string)",
                                    "nextHopType": "(string)",
                                    "nextHopIpAddress": "(string)",
                                    "provisioningState": "(string)"
                                },
                                "name": "(string)",
                                "etag": "(string)"
                            }
                        ],
                        "subnets": [
                            "(undefined)"
                        ],
                        "provisioningState": "(string)"
                    },
                    "etag": "(string)"
                },
                "ipConfigurations": [
                    {
                        "id": "(string)",
                        "properties": {
                            "privateIPAddress": "(string)",
                            "privateIPAllocationMethod": "(string)",
                            "subnet": "(undefined)",
                            "publicIPAddress": {
                                "id": "(string)",
                                "name": "(string)",
                                "type": "(string)",
                                "location": "(string)",
                                "tags": {},
                                "properties": {
                                    "publicIPAllocationMethod": "(string)",
                                    "publicIPAddressVersion": "(string)",
                                    "ipConfiguration": "(undefined)",
                                    "dnsSettings": {
                                        "domainNameLabel": "(string)",
                                        "fqdn": "(string)",
                                        "reverseFqdn": "(string)"
                                    },
                                    "ipAddress": "(string)",
                                    "idleTimeoutInMinutes": "(integer)",
                                    "resourceGuid": "(string)",
                                    "provisioningState": "(string)"
                                },
                                "etag": "(string)"
                            },
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "resourceNavigationLinks": [
                    {
                        "id": "(string)",
                        "properties": {
                            "linkedResourceType": "(string)",
                            "link": "(string)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "provisioningState": "(string)"
            },
            "name": "(string)",
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "properties": {
                "addressPrefix": "Gets or sets Address prefix for the subnet.",
                "networkSecurityGroup": {
                    "id": "Resource Id",
                    "name": "Resource name",
                    "type": "Resource type",
                    "location": "Resource location",
                    "tags": {},
                    "properties": {
                        "securityRules": [
                            {
                                "id": "Resource Id",
                                "properties": {
                                    "description": "Gets or sets a description for this rule. Restricted to 140 chars.",
                                    "protocol": "Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).",
                                    "sourcePortRange": "Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                    "destinationPortRange": "Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                    "sourceAddressPrefix": "Gets or sets source address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                                    "destinationAddressPrefix": "Gets or sets destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. ",
                                    "access": "Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'",
                                    "priority": "Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                                    "direction": "Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outcoming traffic.",
                                    "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                },
                                "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                "etag": "A unique read-only string that changes whenever the resource is updated"
                            }
                        ],
                        "defaultSecurityRules": [
                            {
                                "id": "Resource Id",
                                "properties": {
                                    "description": "Gets or sets a description for this rule. Restricted to 140 chars.",
                                    "protocol": "Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).",
                                    "sourcePortRange": "Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                    "destinationPortRange": "Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                    "sourceAddressPrefix": "Gets or sets source address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                                    "destinationAddressPrefix": "Gets or sets destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. ",
                                    "access": "Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'",
                                    "priority": "Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                                    "direction": "Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outcoming traffic.",
                                    "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                },
                                "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                "etag": "A unique read-only string that changes whenever the resource is updated"
                            }
                        ],
                        "networkInterfaces": [
                            {
                                "id": "Resource Id",
                                "name": "Resource name",
                                "type": "Resource type",
                                "location": "Resource location",
                                "tags": {},
                                "properties": {
                                    "virtualMachine": {
                                        "id": "Resource Id"
                                    },
                                    "networkSecurityGroup": "Gets or sets the reference of the NetworkSecurityGroup resource",
                                    "ipConfigurations": [
                                        {
                                            "id": "Resource Id",
                                            "properties": {
                                                "applicationGatewayBackendAddressPools": [
                                                    {
                                                        "id": "Resource Id",
                                                        "properties": {
                                                            "backendIPConfigurations": [
                                                                null
                                                            ],
                                                            "backendAddresses": [
                                                                {
                                                                    "fqdn": "Dns name",
                                                                    "ipAddress": "Ip address"
                                                                }
                                                            ],
                                                            "provisioningState": "Provisioning state of the backend address pool resource Updating/Deleting/Failed"
                                                        },
                                                        "name": "Resource that is unique within a resource group. This name can be used to access the resource",
                                                        "etag": "A unique read-only string that changes whenever the resource is updated"
                                                    }
                                                ],
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "Resource Id",
                                                        "properties": {
                                                            "backendIPConfigurations": [
                                                                null
                                                            ],
                                                            "loadBalancingRules": [
                                                                {
                                                                    "id": "Resource Id"
                                                                }
                                                            ],
                                                            "outboundNatRule": {
                                                                "id": "Resource Id"
                                                            },
                                                            "provisioningState": "Get provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                        },
                                                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                        "etag": "A unique read-only string that changes whenever the resource is updated"
                                                    }
                                                ],
                                                "loadBalancerInboundNatRules": [
                                                    {
                                                        "id": "Resource Id",
                                                        "properties": {
                                                            "frontendIPConfiguration": {
                                                                "id": "Resource Id"
                                                            },
                                                            "backendIPConfiguration": "Gets or sets a reference to a private ip address defined on a NetworkInterface of a VM. Traffic sent to frontendPort of each of the frontendIPConfigurations is forwarded to the backed IP",
                                                            "protocol": "Gets or sets the transport protocol for the endpoint. Possible values are Udp or Tcp",
                                                            "frontendPort": "Gets or sets the port for the external endpoint. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive",
                                                            "backendPort": "Gets or sets a port used for internal connections on the endpoint. The localPort attribute maps the eternal port of the endpoint to an internal port on a role. This is useful in scenarios where a role must communicate to an internal component on a port that is different from the one that is exposed externally. If not specified, the value of localPort is the same as the port attribute. Set the value of localPort to '*' to automatically assign an unallocated port that is discoverable using the runtime API",
                                                            "idleTimeoutInMinutes": "Gets or sets the timeout for the Tcp idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to Tcp",
                                                            "enableFloatingIP": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn availability Group. This setting is required when using the SQL Always ON availability Groups in SQL server. This setting can't be changed after you create the endpoint",
                                                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                        },
                                                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                        "etag": "A unique read-only string that changes whenever the resource is updated"
                                                    }
                                                ],
                                                "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                                                "privateIPAddressVersion": "Gets or sets PrivateIP address version (IPv4/IPv6)",
                                                "primary": "Gets whether this is a primary customer address on the NIC",
                                                "publicIPAddress": {
                                                    "id": "Resource Id",
                                                    "name": "Resource name",
                                                    "type": "Resource type",
                                                    "location": "Resource location",
                                                    "tags": {},
                                                    "properties": {
                                                        "publicIPAllocationMethod": "Gets or sets PublicIP allocation method (Static/Dynamic)",
                                                        "publicIPAddressVersion": "Gets or sets PublicIP address version (IPv4/IPv6)",
                                                        "dnsSettings": {
                                                            "domainNameLabel": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
                                                            "fqdn": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
                                                            "reverseFqdn": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
                                                        },
                                                        "idleTimeoutInMinutes": "Gets or sets the Idletimeout of the public IP address",
                                                        "resourceGuid": "Gets or sets resource guid property of the PublicIP resource",
                                                        "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                    },
                                                    "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                                                }
                                            },
                                            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                            "etag": "A unique read-only string that changes whenever the resource is updated"
                                        }
                                    ],
                                    "dnsSettings": {
                                        "dnsServers": [
                                            null
                                        ],
                                        "appliedDnsServers": [
                                            null
                                        ],
                                        "internalDnsNameLabel": "Gets or sets the internal DNS name",
                                        "internalFqdn": "Gets or sets the internal fqdn.",
                                        "internalDomainNameSuffix": "Gets or sets internal domain name suffix of the NIC."
                                    },
                                    "macAddress": "Gets the MAC address of the network interface",
                                    "primary": "Gets whether this is a primary NIC on a virtual machine",
                                    "enableAcceleratedNetworking": "Gets or sets if the network interface is accelerated networking enabled",
                                    "enableIPForwarding": "Gets or sets whether IPForwarding is enabled on the NIC",
                                    "resourceGuid": "Gets or sets resource guid property of the network interface resource",
                                    "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                },
                                "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                            }
                        ],
                        "subnets": [
                            null
                        ],
                        "resourceGuid": "Gets or sets resource guid property of the network security group resource",
                        "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                    },
                    "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                },
                "routeTable": {
                    "id": "Resource Id",
                    "name": "Resource name",
                    "type": "Resource type",
                    "location": "Resource location",
                    "tags": {},
                    "properties": {
                        "routes": [
                            {
                                "id": "Resource Id",
                                "properties": {
                                    "addressPrefix": "Gets or sets the destination CIDR to which the route applies.",
                                    "nextHopType": "Gets or sets the type of Azure hop the packet should be sent to.",
                                    "nextHopIpAddress": "Gets or sets the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
                                    "provisioningState": "Gets provisioning state of the resource Updating/Deleting/Failed"
                                },
                                "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                "etag": "A unique read-only string that changes whenever the resource is updated"
                            }
                        ],
                        "subnets": [
                            null
                        ],
                        "provisioningState": "Gets provisioning state of the resource Updating/Deleting/Failed"
                    },
                    "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                },
                "ipConfigurations": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "privateIPAddress": "Gets or sets the privateIPAddress of the IP Configuration",
                            "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                            "subnet": "Gets or sets the reference of the subnet resource",
                            "publicIPAddress": {
                                "id": "Resource Id",
                                "name": "Resource name",
                                "type": "Resource type",
                                "location": "Resource location",
                                "tags": {},
                                "properties": {
                                    "publicIPAllocationMethod": "Gets or sets PublicIP allocation method (Static/Dynamic)",
                                    "publicIPAddressVersion": "Gets or sets PublicIP address version (IPv4/IPv6)",
                                    "dnsSettings": {
                                        "domainNameLabel": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
                                        "fqdn": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
                                        "reverseFqdn": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
                                    },
                                    "idleTimeoutInMinutes": "Gets or sets the Idletimeout of the public IP address",
                                    "resourceGuid": "Gets or sets resource guid property of the PublicIP resource",
                                    "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                },
                                "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                            },
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "resourceNavigationLinks": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "linkedResourceType": "Resource type of the linked resource",
                            "link": "Link to the external resource",
                            "provisioningState": "Provisioning state of the ResourceNavigationLink resource"
                        },
                        "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "provisioningState": "Gets provisioning state of the resource"
            },
            "name": "Gets or sets the name of the resource that is unique within a resource group. This name can be used to access the resource",
            "etag": "A unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
        "RequestBody": {
            "id": "(string)",
            "properties": {
                "allowVirtualNetworkAccess": "(boolean)",
                "allowForwardedTraffic": "(boolean)",
                "allowGatewayTransit": "(boolean)",
                "useRemoteGateways": "(boolean)",
                "remoteVirtualNetwork": {
                    "id": "(string)"
                },
                "peeringState": "(string)",
                "provisioningState": "(string)"
            },
            "name": "(string)",
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "properties": {
                "allowVirtualNetworkAccess": "Gets or sets whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space",
                "allowForwardedTraffic": "Gets or sets whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed",
                "allowGatewayTransit": "Gets or sets if gatewayLinks can be used in remote virtual network’s link to this virtual network",
                "useRemoteGateways": "Gets or sets if remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only 1 peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.",
                "remoteVirtualNetwork": {
                    "id": "Resource Id"
                },
                "peeringState": "Gets the status of the virtual network peering",
                "provisioningState": "Gets provisioning state of the resource"
            },
            "name": "Gets or sets the name of the resource that is unique within a resource group. This name can be used to access the resource",
            "etag": "A unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/usages",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "authorizationKey": "(string)",
                "virtualNetworkGateway1": {
                    "id": "(string)",
                    "name": "(string)",
                    "type": "(string)",
                    "location": "(string)",
                    "tags": {},
                    "properties": {
                        "ipConfigurations": [
                            {
                                "id": "(string)",
                                "properties": {
                                    "privateIPAllocationMethod": "(string)",
                                    "subnet": {
                                        "id": "(string)"
                                    },
                                    "publicIPAddress": {
                                        "id": "(string)"
                                    },
                                    "provisioningState": "(string)"
                                },
                                "name": "(string)",
                                "etag": "(string)"
                            }
                        ],
                        "gatewayType": "(string)",
                        "vpnType": "(string)",
                        "enableBgp": "(boolean)",
                        "activeActive": "(boolean)",
                        "gatewayDefaultSite": {
                            "id": "(string)"
                        },
                        "sku": {
                            "name": "(string)",
                            "tier": "(string)",
                            "capacity": "(integer)"
                        },
                        "vpnClientConfiguration": {
                            "vpnClientAddressPool": {
                                "addressPrefixes": [
                                    "(string)"
                                ]
                            },
                            "vpnClientRootCertificates": [
                                {
                                    "id": "(string)",
                                    "properties": {
                                        "publicCertData": "(string)",
                                        "provisioningState": "(string)"
                                    },
                                    "name": "(string)",
                                    "etag": "(string)"
                                }
                            ],
                            "vpnClientRevokedCertificates": [
                                {
                                    "id": "(string)",
                                    "properties": {
                                        "thumbprint": "(string)",
                                        "provisioningState": "(string)"
                                    },
                                    "name": "(string)",
                                    "etag": "(string)"
                                }
                            ]
                        },
                        "bgpSettings": {
                            "asn": "(integer)",
                            "bgpPeeringAddress": "(string)",
                            "peerWeight": "(integer)"
                        },
                        "resourceGuid": "(string)",
                        "provisioningState": "(string)"
                    },
                    "etag": "(string)"
                },
                "virtualNetworkGateway2": {
                    "id": "(string)",
                    "name": "(string)",
                    "type": "(string)",
                    "location": "(string)",
                    "tags": {},
                    "properties": {
                        "ipConfigurations": [
                            {
                                "id": "(string)",
                                "properties": {
                                    "privateIPAllocationMethod": "(string)",
                                    "subnet": {
                                        "id": "(string)"
                                    },
                                    "publicIPAddress": {
                                        "id": "(string)"
                                    },
                                    "provisioningState": "(string)"
                                },
                                "name": "(string)",
                                "etag": "(string)"
                            }
                        ],
                        "gatewayType": "(string)",
                        "vpnType": "(string)",
                        "enableBgp": "(boolean)",
                        "activeActive": "(boolean)",
                        "gatewayDefaultSite": {
                            "id": "(string)"
                        },
                        "sku": {
                            "name": "(string)",
                            "tier": "(string)",
                            "capacity": "(integer)"
                        },
                        "vpnClientConfiguration": {
                            "vpnClientAddressPool": {
                                "addressPrefixes": [
                                    "(string)"
                                ]
                            },
                            "vpnClientRootCertificates": [
                                {
                                    "id": "(string)",
                                    "properties": {
                                        "publicCertData": "(string)",
                                        "provisioningState": "(string)"
                                    },
                                    "name": "(string)",
                                    "etag": "(string)"
                                }
                            ],
                            "vpnClientRevokedCertificates": [
                                {
                                    "id": "(string)",
                                    "properties": {
                                        "thumbprint": "(string)",
                                        "provisioningState": "(string)"
                                    },
                                    "name": "(string)",
                                    "etag": "(string)"
                                }
                            ]
                        },
                        "bgpSettings": {
                            "asn": "(integer)",
                            "bgpPeeringAddress": "(string)",
                            "peerWeight": "(integer)"
                        },
                        "resourceGuid": "(string)",
                        "provisioningState": "(string)"
                    },
                    "etag": "(string)"
                },
                "localNetworkGateway2": {
                    "id": "(string)",
                    "name": "(string)",
                    "type": "(string)",
                    "location": "(string)",
                    "tags": {},
                    "properties": {
                        "localNetworkAddressSpace": {
                            "addressPrefixes": [
                                "(string)"
                            ]
                        },
                        "gatewayIpAddress": "(string)",
                        "bgpSettings": {
                            "asn": "(integer)",
                            "bgpPeeringAddress": "(string)",
                            "peerWeight": "(integer)"
                        },
                        "resourceGuid": "(string)",
                        "provisioningState": "(string)"
                    },
                    "etag": "(string)"
                },
                "connectionType": "(string)",
                "routingWeight": "(integer)",
                "sharedKey": "(string)",
                "connectionStatus": "(string)",
                "egressBytesTransferred": "(integer)",
                "ingressBytesTransferred": "(integer)",
                "peer": {
                    "id": "(string)"
                },
                "enableBgp": "(boolean)",
                "resourceGuid": "(string)",
                "provisioningState": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "authorizationKey": "The authorizationKey.",
                "virtualNetworkGateway1": {
                    "id": "Resource Id",
                    "name": "Resource name",
                    "type": "Resource type",
                    "location": "Resource location",
                    "tags": {},
                    "properties": {
                        "ipConfigurations": [
                            {
                                "id": "Resource Id",
                                "properties": {
                                    "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                                    "subnet": {
                                        "id": "Resource Id"
                                    },
                                    "publicIPAddress": {
                                        "id": "Resource Id"
                                    },
                                    "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                },
                                "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                "etag": "A unique read-only string that changes whenever the resource is updated"
                            }
                        ],
                        "gatewayType": "The type of this virtual network gateway.",
                        "vpnType": "The type of this virtual network gateway.",
                        "enableBgp": "EnableBgp Flag",
                        "activeActive": "ActiveActive flag",
                        "gatewayDefaultSite": {
                            "id": "Resource Id"
                        },
                        "sku": {
                            "name": "Gateway sku name -Basic/HighPerformance/Standard/UltraPerformance",
                            "tier": "Gateway sku tier -Basic/HighPerformance/Standard/UltraPerformance",
                            "capacity": "The capacity"
                        },
                        "vpnClientConfiguration": {
                            "vpnClientAddressPool": {
                                "addressPrefixes": [
                                    null
                                ]
                            },
                            "vpnClientRootCertificates": [
                                {
                                    "id": "Resource Id",
                                    "properties": {
                                        "publicCertData": "Gets or sets the certificate public data",
                                        "provisioningState": "Gets provisioning state of the VPN client root certificate resource Updating/Deleting/Failed"
                                    },
                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                }
                            ],
                            "vpnClientRevokedCertificates": [
                                {
                                    "id": "Resource Id",
                                    "properties": {
                                        "thumbprint": "Gets or sets the revoked Vpn client certificate thumbprint",
                                        "provisioningState": "Gets provisioning state of the VPN client revoked certificate resource Updating/Deleting/Failed"
                                    },
                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                }
                            ]
                        },
                        "bgpSettings": {
                            "asn": "Gets or sets this BGP speaker's ASN",
                            "bgpPeeringAddress": "Gets or sets the BGP peering address and BGP identifier of this BGP speaker",
                            "peerWeight": "Gets or sets the weight added to routes learned from this BGP speaker"
                        },
                        "resourceGuid": "Gets or sets resource guid property of the VirtualNetworkGateway resource",
                        "provisioningState": "Gets provisioning state of the VirtualNetworkGateway resource Updating/Deleting/Failed"
                    },
                    "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                },
                "virtualNetworkGateway2": {
                    "id": "Resource Id",
                    "name": "Resource name",
                    "type": "Resource type",
                    "location": "Resource location",
                    "tags": {},
                    "properties": {
                        "ipConfigurations": [
                            {
                                "id": "Resource Id",
                                "properties": {
                                    "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                                    "subnet": {
                                        "id": "Resource Id"
                                    },
                                    "publicIPAddress": {
                                        "id": "Resource Id"
                                    },
                                    "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                },
                                "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                "etag": "A unique read-only string that changes whenever the resource is updated"
                            }
                        ],
                        "gatewayType": "The type of this virtual network gateway.",
                        "vpnType": "The type of this virtual network gateway.",
                        "enableBgp": "EnableBgp Flag",
                        "activeActive": "ActiveActive flag",
                        "gatewayDefaultSite": {
                            "id": "Resource Id"
                        },
                        "sku": {
                            "name": "Gateway sku name -Basic/HighPerformance/Standard/UltraPerformance",
                            "tier": "Gateway sku tier -Basic/HighPerformance/Standard/UltraPerformance",
                            "capacity": "The capacity"
                        },
                        "vpnClientConfiguration": {
                            "vpnClientAddressPool": {
                                "addressPrefixes": [
                                    null
                                ]
                            },
                            "vpnClientRootCertificates": [
                                {
                                    "id": "Resource Id",
                                    "properties": {
                                        "publicCertData": "Gets or sets the certificate public data",
                                        "provisioningState": "Gets provisioning state of the VPN client root certificate resource Updating/Deleting/Failed"
                                    },
                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                }
                            ],
                            "vpnClientRevokedCertificates": [
                                {
                                    "id": "Resource Id",
                                    "properties": {
                                        "thumbprint": "Gets or sets the revoked Vpn client certificate thumbprint",
                                        "provisioningState": "Gets provisioning state of the VPN client revoked certificate resource Updating/Deleting/Failed"
                                    },
                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                }
                            ]
                        },
                        "bgpSettings": {
                            "asn": "Gets or sets this BGP speaker's ASN",
                            "bgpPeeringAddress": "Gets or sets the BGP peering address and BGP identifier of this BGP speaker",
                            "peerWeight": "Gets or sets the weight added to routes learned from this BGP speaker"
                        },
                        "resourceGuid": "Gets or sets resource guid property of the VirtualNetworkGateway resource",
                        "provisioningState": "Gets provisioning state of the VirtualNetworkGateway resource Updating/Deleting/Failed"
                    },
                    "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                },
                "localNetworkGateway2": {
                    "id": "Resource Id",
                    "name": "Resource name",
                    "type": "Resource type",
                    "location": "Resource location",
                    "tags": {},
                    "properties": {
                        "localNetworkAddressSpace": {
                            "addressPrefixes": [
                                null
                            ]
                        },
                        "gatewayIpAddress": "IP address of local network gateway.",
                        "bgpSettings": {
                            "asn": "Gets or sets this BGP speaker's ASN",
                            "bgpPeeringAddress": "Gets or sets the BGP peering address and BGP identifier of this BGP speaker",
                            "peerWeight": "Gets or sets the weight added to routes learned from this BGP speaker"
                        },
                        "resourceGuid": "Gets or sets resource guid property of the LocalNetworkGateway resource",
                        "provisioningState": "Gets provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed"
                    },
                    "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                },
                "connectionType": "Gateway connection type -Ipsec/Dedicated/VpnClient/Vnet2Vnet",
                "routingWeight": "The Routing weight.",
                "sharedKey": "The Ipsec share key.",
                "connectionStatus": "Virtual network Gateway connection status",
                "egressBytesTransferred": "The Egress Bytes Transferred in this connection",
                "ingressBytesTransferred": "The Ingress Bytes Transferred in this connection",
                "peer": {
                    "id": "Resource Id"
                },
                "enableBgp": "EnableBgp Flag",
                "resourceGuid": "Gets or sets resource guid property of the VirtualNetworkGatewayConnection resource",
                "provisioningState": "Gets provisioning state of the VirtualNetworkGatewayConnection resource Updating/Deleting/Failed"
            },
            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{connectionSharedKeyName}/sharedkey",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset",
        "RequestBody": {
            "keyLength": "(integer)"
        },
        "RequestBodyDoc": {
            "keyLength": "The virtual network connection reset shared key length"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey",
        "RequestBody": {
            "value": "(string)"
        },
        "RequestBodyDoc": {
            "value": "The virtual network connection shared key value"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "ipConfigurations": [
                    {
                        "id": "(string)",
                        "properties": {
                            "privateIPAllocationMethod": "(string)",
                            "subnet": {
                                "id": "(string)"
                            },
                            "publicIPAddress": {
                                "id": "(string)"
                            },
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "gatewayType": "(string)",
                "vpnType": "(string)",
                "enableBgp": "(boolean)",
                "activeActive": "(boolean)",
                "gatewayDefaultSite": {
                    "id": "(string)"
                },
                "sku": {
                    "name": "(string)",
                    "tier": "(string)",
                    "capacity": "(integer)"
                },
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            "(string)"
                        ]
                    },
                    "vpnClientRootCertificates": [
                        {
                            "id": "(string)",
                            "properties": {
                                "publicCertData": "(string)",
                                "provisioningState": "(string)"
                            },
                            "name": "(string)",
                            "etag": "(string)"
                        }
                    ],
                    "vpnClientRevokedCertificates": [
                        {
                            "id": "(string)",
                            "properties": {
                                "thumbprint": "(string)",
                                "provisioningState": "(string)"
                            },
                            "name": "(string)",
                            "etag": "(string)"
                        }
                    ]
                },
                "bgpSettings": {
                    "asn": "(integer)",
                    "bgpPeeringAddress": "(string)",
                    "peerWeight": "(integer)"
                },
                "resourceGuid": "(string)",
                "provisioningState": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "ipConfigurations": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                            "subnet": {
                                "id": "Resource Id"
                            },
                            "publicIPAddress": {
                                "id": "Resource Id"
                            },
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "gatewayType": "The type of this virtual network gateway.",
                "vpnType": "The type of this virtual network gateway.",
                "enableBgp": "EnableBgp Flag",
                "activeActive": "ActiveActive flag",
                "gatewayDefaultSite": {
                    "id": "Resource Id"
                },
                "sku": {
                    "name": "Gateway sku name -Basic/HighPerformance/Standard/UltraPerformance",
                    "tier": "Gateway sku tier -Basic/HighPerformance/Standard/UltraPerformance",
                    "capacity": "The capacity"
                },
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            null
                        ]
                    },
                    "vpnClientRootCertificates": [
                        {
                            "id": "Resource Id",
                            "properties": {
                                "publicCertData": "Gets or sets the certificate public data",
                                "provisioningState": "Gets provisioning state of the VPN client root certificate resource Updating/Deleting/Failed"
                            },
                            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                            "etag": "A unique read-only string that changes whenever the resource is updated"
                        }
                    ],
                    "vpnClientRevokedCertificates": [
                        {
                            "id": "Resource Id",
                            "properties": {
                                "thumbprint": "Gets or sets the revoked Vpn client certificate thumbprint",
                                "provisioningState": "Gets provisioning state of the VPN client revoked certificate resource Updating/Deleting/Failed"
                            },
                            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                            "etag": "A unique read-only string that changes whenever the resource is updated"
                        }
                    ]
                },
                "bgpSettings": {
                    "asn": "Gets or sets this BGP speaker's ASN",
                    "bgpPeeringAddress": "Gets or sets the BGP peering address and BGP identifier of this BGP speaker",
                    "peerWeight": "Gets or sets the weight added to routes learned from this BGP speaker"
                },
                "resourceGuid": "Gets or sets resource guid property of the VirtualNetworkGateway resource",
                "provisioningState": "Gets provisioning state of the VirtualNetworkGateway resource Updating/Deleting/Failed"
            },
            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "ipConfigurations": [
                    {
                        "id": "(string)",
                        "properties": {
                            "privateIPAllocationMethod": "(string)",
                            "subnet": {
                                "id": "(string)"
                            },
                            "publicIPAddress": {
                                "id": "(string)"
                            },
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "gatewayType": "(string)",
                "vpnType": "(string)",
                "enableBgp": "(boolean)",
                "activeActive": "(boolean)",
                "gatewayDefaultSite": {
                    "id": "(string)"
                },
                "sku": {
                    "name": "(string)",
                    "tier": "(string)",
                    "capacity": "(integer)"
                },
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            "(string)"
                        ]
                    },
                    "vpnClientRootCertificates": [
                        {
                            "id": "(string)",
                            "properties": {
                                "publicCertData": "(string)",
                                "provisioningState": "(string)"
                            },
                            "name": "(string)",
                            "etag": "(string)"
                        }
                    ],
                    "vpnClientRevokedCertificates": [
                        {
                            "id": "(string)",
                            "properties": {
                                "thumbprint": "(string)",
                                "provisioningState": "(string)"
                            },
                            "name": "(string)",
                            "etag": "(string)"
                        }
                    ]
                },
                "bgpSettings": {
                    "asn": "(integer)",
                    "bgpPeeringAddress": "(string)",
                    "peerWeight": "(integer)"
                },
                "resourceGuid": "(string)",
                "provisioningState": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "ipConfigurations": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                            "subnet": {
                                "id": "Resource Id"
                            },
                            "publicIPAddress": {
                                "id": "Resource Id"
                            },
                            "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                        },
                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "gatewayType": "The type of this virtual network gateway.",
                "vpnType": "The type of this virtual network gateway.",
                "enableBgp": "EnableBgp Flag",
                "activeActive": "ActiveActive flag",
                "gatewayDefaultSite": {
                    "id": "Resource Id"
                },
                "sku": {
                    "name": "Gateway sku name -Basic/HighPerformance/Standard/UltraPerformance",
                    "tier": "Gateway sku tier -Basic/HighPerformance/Standard/UltraPerformance",
                    "capacity": "The capacity"
                },
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            null
                        ]
                    },
                    "vpnClientRootCertificates": [
                        {
                            "id": "Resource Id",
                            "properties": {
                                "publicCertData": "Gets or sets the certificate public data",
                                "provisioningState": "Gets provisioning state of the VPN client root certificate resource Updating/Deleting/Failed"
                            },
                            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                            "etag": "A unique read-only string that changes whenever the resource is updated"
                        }
                    ],
                    "vpnClientRevokedCertificates": [
                        {
                            "id": "Resource Id",
                            "properties": {
                                "thumbprint": "Gets or sets the revoked Vpn client certificate thumbprint",
                                "provisioningState": "Gets provisioning state of the VPN client revoked certificate resource Updating/Deleting/Failed"
                            },
                            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                            "etag": "A unique read-only string that changes whenever the resource is updated"
                        }
                    ]
                },
                "bgpSettings": {
                    "asn": "Gets or sets this BGP speaker's ASN",
                    "bgpPeeringAddress": "Gets or sets the BGP peering address and BGP identifier of this BGP speaker",
                    "peerWeight": "Gets or sets the weight added to routes learned from this BGP speaker"
                },
                "resourceGuid": "Gets or sets resource guid property of the VirtualNetworkGateway resource",
                "provisioningState": "Gets provisioning state of the VirtualNetworkGateway resource Updating/Deleting/Failed"
            },
            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "MethodNameWeird",
        "HttpMethod": "POST",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnclientpackage",
        "RequestBody": {
            "ProcessorArchitecture": "(string)"
        },
        "RequestBodyDoc": {
            "ProcessorArchitecture": "VPN client Processor Architecture -Amd64/X86"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "(string)"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": [
                        "(string)"
                    ]
                },
                "subnets": [
                    {
                        "id": "(string)",
                        "properties": {
                            "addressPrefix": "(string)",
                            "networkSecurityGroup": {
                                "id": "(string)",
                                "name": "(string)",
                                "type": "(string)",
                                "location": "(string)",
                                "tags": {},
                                "properties": {
                                    "securityRules": [
                                        {
                                            "id": "(string)",
                                            "properties": {
                                                "description": "(string)",
                                                "protocol": "(string)",
                                                "sourcePortRange": "(string)",
                                                "destinationPortRange": "(string)",
                                                "sourceAddressPrefix": "(string)",
                                                "destinationAddressPrefix": "(string)",
                                                "access": "(string)",
                                                "priority": "(integer)",
                                                "direction": "(string)",
                                                "provisioningState": "(string)"
                                            },
                                            "name": "(string)",
                                            "etag": "(string)"
                                        }
                                    ],
                                    "defaultSecurityRules": [
                                        {
                                            "id": "(string)",
                                            "properties": {
                                                "description": "(string)",
                                                "protocol": "(string)",
                                                "sourcePortRange": "(string)",
                                                "destinationPortRange": "(string)",
                                                "sourceAddressPrefix": "(string)",
                                                "destinationAddressPrefix": "(string)",
                                                "access": "(string)",
                                                "priority": "(integer)",
                                                "direction": "(string)",
                                                "provisioningState": "(string)"
                                            },
                                            "name": "(string)",
                                            "etag": "(string)"
                                        }
                                    ],
                                    "networkInterfaces": [
                                        {
                                            "id": "(string)",
                                            "name": "(string)",
                                            "type": "(string)",
                                            "location": "(string)",
                                            "tags": {},
                                            "properties": {
                                                "virtualMachine": {
                                                    "id": "(string)"
                                                },
                                                "networkSecurityGroup": "(undefined)",
                                                "ipConfigurations": [
                                                    {
                                                        "id": "(string)",
                                                        "properties": {
                                                            "applicationGatewayBackendAddressPools": [
                                                                {
                                                                    "id": "(string)",
                                                                    "properties": {
                                                                        "backendIPConfigurations": [
                                                                            "(undefined)"
                                                                        ],
                                                                        "backendAddresses": [
                                                                            {
                                                                                "fqdn": "(string)",
                                                                                "ipAddress": "(string)"
                                                                            }
                                                                        ],
                                                                        "provisioningState": "(string)"
                                                                    },
                                                                    "name": "(string)",
                                                                    "etag": "(string)"
                                                                }
                                                            ],
                                                            "loadBalancerBackendAddressPools": [
                                                                {
                                                                    "id": "(string)",
                                                                    "properties": {
                                                                        "backendIPConfigurations": [
                                                                            "(undefined)"
                                                                        ],
                                                                        "loadBalancingRules": [
                                                                            {
                                                                                "id": "(string)"
                                                                            }
                                                                        ],
                                                                        "outboundNatRule": {
                                                                            "id": "(string)"
                                                                        },
                                                                        "provisioningState": "(string)"
                                                                    },
                                                                    "name": "(string)",
                                                                    "etag": "(string)"
                                                                }
                                                            ],
                                                            "loadBalancerInboundNatRules": [
                                                                {
                                                                    "id": "(string)",
                                                                    "properties": {
                                                                        "frontendIPConfiguration": {
                                                                            "id": "(string)"
                                                                        },
                                                                        "backendIPConfiguration": "(undefined)",
                                                                        "protocol": "(string)",
                                                                        "frontendPort": "(integer)",
                                                                        "backendPort": "(integer)",
                                                                        "idleTimeoutInMinutes": "(integer)",
                                                                        "enableFloatingIP": "(boolean)",
                                                                        "provisioningState": "(string)"
                                                                    },
                                                                    "name": "(string)",
                                                                    "etag": "(string)"
                                                                }
                                                            ],
                                                            "privateIPAddress": "(string)",
                                                            "privateIPAllocationMethod": "(string)",
                                                            "privateIPAddressVersion": "(string)",
                                                            "subnet": "(undefined)",
                                                            "primary": "(boolean)",
                                                            "publicIPAddress": {
                                                                "id": "(string)",
                                                                "name": "(string)",
                                                                "type": "(string)",
                                                                "location": "(string)",
                                                                "tags": {},
                                                                "properties": {
                                                                    "publicIPAllocationMethod": "(string)",
                                                                    "publicIPAddressVersion": "(string)",
                                                                    "ipConfiguration": "(undefined)",
                                                                    "dnsSettings": {
                                                                        "domainNameLabel": "(string)",
                                                                        "fqdn": "(string)",
                                                                        "reverseFqdn": "(string)"
                                                                    },
                                                                    "ipAddress": "(string)",
                                                                    "idleTimeoutInMinutes": "(integer)",
                                                                    "resourceGuid": "(string)",
                                                                    "provisioningState": "(string)"
                                                                },
                                                                "etag": "(string)"
                                                            },
                                                            "provisioningState": "(string)"
                                                        },
                                                        "name": "(string)",
                                                        "etag": "(string)"
                                                    }
                                                ],
                                                "dnsSettings": {
                                                    "dnsServers": [
                                                        "(string)"
                                                    ],
                                                    "appliedDnsServers": [
                                                        "(string)"
                                                    ],
                                                    "internalDnsNameLabel": "(string)",
                                                    "internalFqdn": "(string)",
                                                    "internalDomainNameSuffix": "(string)"
                                                },
                                                "macAddress": "(string)",
                                                "primary": "(boolean)",
                                                "enableAcceleratedNetworking": "(boolean)",
                                                "enableIPForwarding": "(boolean)",
                                                "resourceGuid": "(string)",
                                                "provisioningState": "(string)"
                                            },
                                            "etag": "(string)"
                                        }
                                    ],
                                    "subnets": [
                                        "(undefined)"
                                    ],
                                    "resourceGuid": "(string)",
                                    "provisioningState": "(string)"
                                },
                                "etag": "(string)"
                            },
                            "routeTable": {
                                "id": "(string)",
                                "name": "(string)",
                                "type": "(string)",
                                "location": "(string)",
                                "tags": {},
                                "properties": {
                                    "routes": [
                                        {
                                            "id": "(string)",
                                            "properties": {
                                                "addressPrefix": "(string)",
                                                "nextHopType": "(string)",
                                                "nextHopIpAddress": "(string)",
                                                "provisioningState": "(string)"
                                            },
                                            "name": "(string)",
                                            "etag": "(string)"
                                        }
                                    ],
                                    "subnets": [
                                        "(undefined)"
                                    ],
                                    "provisioningState": "(string)"
                                },
                                "etag": "(string)"
                            },
                            "ipConfigurations": [
                                {
                                    "id": "(string)",
                                    "properties": {
                                        "privateIPAddress": "(string)",
                                        "privateIPAllocationMethod": "(string)",
                                        "subnet": "(undefined)",
                                        "publicIPAddress": {
                                            "id": "(string)",
                                            "name": "(string)",
                                            "type": "(string)",
                                            "location": "(string)",
                                            "tags": {},
                                            "properties": {
                                                "publicIPAllocationMethod": "(string)",
                                                "publicIPAddressVersion": "(string)",
                                                "ipConfiguration": "(undefined)",
                                                "dnsSettings": {
                                                    "domainNameLabel": "(string)",
                                                    "fqdn": "(string)",
                                                    "reverseFqdn": "(string)"
                                                },
                                                "ipAddress": "(string)",
                                                "idleTimeoutInMinutes": "(integer)",
                                                "resourceGuid": "(string)",
                                                "provisioningState": "(string)"
                                            },
                                            "etag": "(string)"
                                        },
                                        "provisioningState": "(string)"
                                    },
                                    "name": "(string)",
                                    "etag": "(string)"
                                }
                            ],
                            "resourceNavigationLinks": [
                                {
                                    "id": "(string)",
                                    "properties": {
                                        "linkedResourceType": "(string)",
                                        "link": "(string)",
                                        "provisioningState": "(string)"
                                    },
                                    "name": "(string)",
                                    "etag": "(string)"
                                }
                            ],
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "VirtualNetworkPeerings": [
                    {
                        "id": "(string)",
                        "properties": {
                            "allowVirtualNetworkAccess": "(boolean)",
                            "allowForwardedTraffic": "(boolean)",
                            "allowGatewayTransit": "(boolean)",
                            "useRemoteGateways": "(boolean)",
                            "remoteVirtualNetwork": {
                                "id": "(string)"
                            },
                            "peeringState": "(string)",
                            "provisioningState": "(string)"
                        },
                        "name": "(string)",
                        "etag": "(string)"
                    }
                ],
                "resourceGuid": "(string)",
                "provisioningState": "(string)"
            },
            "etag": "(string)"
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        null
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": [
                        null
                    ]
                },
                "subnets": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "addressPrefix": "Gets or sets Address prefix for the subnet.",
                            "networkSecurityGroup": {
                                "id": "Resource Id",
                                "name": "Resource name",
                                "type": "Resource type",
                                "location": "Resource location",
                                "tags": {},
                                "properties": {
                                    "securityRules": [
                                        {
                                            "id": "Resource Id",
                                            "properties": {
                                                "description": "Gets or sets a description for this rule. Restricted to 140 chars.",
                                                "protocol": "Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).",
                                                "sourcePortRange": "Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                                "destinationPortRange": "Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                                "sourceAddressPrefix": "Gets or sets source address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                                                "destinationAddressPrefix": "Gets or sets destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. ",
                                                "access": "Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'",
                                                "priority": "Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                                                "direction": "Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outcoming traffic.",
                                                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                            },
                                            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                            "etag": "A unique read-only string that changes whenever the resource is updated"
                                        }
                                    ],
                                    "defaultSecurityRules": [
                                        {
                                            "id": "Resource Id",
                                            "properties": {
                                                "description": "Gets or sets a description for this rule. Restricted to 140 chars.",
                                                "protocol": "Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).",
                                                "sourcePortRange": "Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                                "destinationPortRange": "Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                                "sourceAddressPrefix": "Gets or sets source address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. ",
                                                "destinationAddressPrefix": "Gets or sets destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. ",
                                                "access": "Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'",
                                                "priority": "Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                                                "direction": "Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outcoming traffic.",
                                                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                            },
                                            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                            "etag": "A unique read-only string that changes whenever the resource is updated"
                                        }
                                    ],
                                    "networkInterfaces": [
                                        {
                                            "id": "Resource Id",
                                            "name": "Resource name",
                                            "type": "Resource type",
                                            "location": "Resource location",
                                            "tags": {},
                                            "properties": {
                                                "virtualMachine": {
                                                    "id": "Resource Id"
                                                },
                                                "networkSecurityGroup": "Gets or sets the reference of the NetworkSecurityGroup resource",
                                                "ipConfigurations": [
                                                    {
                                                        "id": "Resource Id",
                                                        "properties": {
                                                            "applicationGatewayBackendAddressPools": [
                                                                {
                                                                    "id": "Resource Id",
                                                                    "properties": {
                                                                        "backendIPConfigurations": [
                                                                            null
                                                                        ],
                                                                        "backendAddresses": [
                                                                            {
                                                                                "fqdn": "Dns name",
                                                                                "ipAddress": "Ip address"
                                                                            }
                                                                        ],
                                                                        "provisioningState": "Provisioning state of the backend address pool resource Updating/Deleting/Failed"
                                                                    },
                                                                    "name": "Resource that is unique within a resource group. This name can be used to access the resource",
                                                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                                                }
                                                            ],
                                                            "loadBalancerBackendAddressPools": [
                                                                {
                                                                    "id": "Resource Id",
                                                                    "properties": {
                                                                        "backendIPConfigurations": [
                                                                            null
                                                                        ],
                                                                        "loadBalancingRules": [
                                                                            {
                                                                                "id": "Resource Id"
                                                                            }
                                                                        ],
                                                                        "outboundNatRule": {
                                                                            "id": "Resource Id"
                                                                        },
                                                                        "provisioningState": "Get provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                                    },
                                                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                                                }
                                                            ],
                                                            "loadBalancerInboundNatRules": [
                                                                {
                                                                    "id": "Resource Id",
                                                                    "properties": {
                                                                        "frontendIPConfiguration": {
                                                                            "id": "Resource Id"
                                                                        },
                                                                        "backendIPConfiguration": "Gets or sets a reference to a private ip address defined on a NetworkInterface of a VM. Traffic sent to frontendPort of each of the frontendIPConfigurations is forwarded to the backed IP",
                                                                        "protocol": "Gets or sets the transport protocol for the endpoint. Possible values are Udp or Tcp",
                                                                        "frontendPort": "Gets or sets the port for the external endpoint. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive",
                                                                        "backendPort": "Gets or sets a port used for internal connections on the endpoint. The localPort attribute maps the eternal port of the endpoint to an internal port on a role. This is useful in scenarios where a role must communicate to an internal component on a port that is different from the one that is exposed externally. If not specified, the value of localPort is the same as the port attribute. Set the value of localPort to '*' to automatically assign an unallocated port that is discoverable using the runtime API",
                                                                        "idleTimeoutInMinutes": "Gets or sets the timeout for the Tcp idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to Tcp",
                                                                        "enableFloatingIP": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn availability Group. This setting is required when using the SQL Always ON availability Groups in SQL server. This setting can't be changed after you create the endpoint",
                                                                        "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                                    },
                                                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                                                }
                                                            ],
                                                            "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                                                            "privateIPAddressVersion": "Gets or sets PrivateIP address version (IPv4/IPv6)",
                                                            "primary": "Gets whether this is a primary customer address on the NIC",
                                                            "publicIPAddress": {
                                                                "id": "Resource Id",
                                                                "name": "Resource name",
                                                                "type": "Resource type",
                                                                "location": "Resource location",
                                                                "tags": {},
                                                                "properties": {
                                                                    "publicIPAllocationMethod": "Gets or sets PublicIP allocation method (Static/Dynamic)",
                                                                    "publicIPAddressVersion": "Gets or sets PublicIP address version (IPv4/IPv6)",
                                                                    "dnsSettings": {
                                                                        "domainNameLabel": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
                                                                        "fqdn": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
                                                                        "reverseFqdn": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
                                                                    },
                                                                    "idleTimeoutInMinutes": "Gets or sets the Idletimeout of the public IP address",
                                                                    "resourceGuid": "Gets or sets resource guid property of the PublicIP resource",
                                                                    "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                                                },
                                                                "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                                                            }
                                                        },
                                                        "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                                        "etag": "A unique read-only string that changes whenever the resource is updated"
                                                    }
                                                ],
                                                "dnsSettings": {
                                                    "dnsServers": [
                                                        null
                                                    ],
                                                    "appliedDnsServers": [
                                                        null
                                                    ],
                                                    "internalDnsNameLabel": "Gets or sets the internal DNS name",
                                                    "internalFqdn": "Gets or sets the internal fqdn.",
                                                    "internalDomainNameSuffix": "Gets or sets internal domain name suffix of the NIC."
                                                },
                                                "macAddress": "Gets the MAC address of the network interface",
                                                "primary": "Gets whether this is a primary NIC on a virtual machine",
                                                "enableAcceleratedNetworking": "Gets or sets if the network interface is accelerated networking enabled",
                                                "enableIPForwarding": "Gets or sets whether IPForwarding is enabled on the NIC",
                                                "resourceGuid": "Gets or sets resource guid property of the network interface resource",
                                                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                            },
                                            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                                        }
                                    ],
                                    "subnets": [
                                        null
                                    ],
                                    "resourceGuid": "Gets or sets resource guid property of the network security group resource",
                                    "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                },
                                "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                            },
                            "routeTable": {
                                "id": "Resource Id",
                                "name": "Resource name",
                                "type": "Resource type",
                                "location": "Resource location",
                                "tags": {},
                                "properties": {
                                    "routes": [
                                        {
                                            "id": "Resource Id",
                                            "properties": {
                                                "addressPrefix": "Gets or sets the destination CIDR to which the route applies.",
                                                "nextHopType": "Gets or sets the type of Azure hop the packet should be sent to.",
                                                "nextHopIpAddress": "Gets or sets the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
                                                "provisioningState": "Gets provisioning state of the resource Updating/Deleting/Failed"
                                            },
                                            "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                            "etag": "A unique read-only string that changes whenever the resource is updated"
                                        }
                                    ],
                                    "subnets": [
                                        null
                                    ],
                                    "provisioningState": "Gets provisioning state of the resource Updating/Deleting/Failed"
                                },
                                "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                            },
                            "ipConfigurations": [
                                {
                                    "id": "Resource Id",
                                    "properties": {
                                        "privateIPAddress": "Gets or sets the privateIPAddress of the IP Configuration",
                                        "privateIPAllocationMethod": "Gets or sets PrivateIP allocation method",
                                        "subnet": "Gets or sets the reference of the subnet resource",
                                        "publicIPAddress": {
                                            "id": "Resource Id",
                                            "name": "Resource name",
                                            "type": "Resource type",
                                            "location": "Resource location",
                                            "tags": {},
                                            "properties": {
                                                "publicIPAllocationMethod": "Gets or sets PublicIP allocation method (Static/Dynamic)",
                                                "publicIPAddressVersion": "Gets or sets PublicIP address version (IPv4/IPv6)",
                                                "dnsSettings": {
                                                    "domainNameLabel": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.",
                                                    "fqdn": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.",
                                                    "reverseFqdn": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
                                                },
                                                "idleTimeoutInMinutes": "Gets or sets the Idletimeout of the public IP address",
                                                "resourceGuid": "Gets or sets resource guid property of the PublicIP resource",
                                                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                            },
                                            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
                                        },
                                        "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
                                    },
                                    "name": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource",
                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                }
                            ],
                            "resourceNavigationLinks": [
                                {
                                    "id": "Resource Id",
                                    "properties": {
                                        "linkedResourceType": "Resource type of the linked resource",
                                        "link": "Link to the external resource",
                                        "provisioningState": "Provisioning state of the ResourceNavigationLink resource"
                                    },
                                    "name": "Name of the resource that is unique within a resource group. This name can be used to access the resource",
                                    "etag": "A unique read-only string that changes whenever the resource is updated"
                                }
                            ],
                            "provisioningState": "Gets provisioning state of the resource"
                        },
                        "name": "Gets or sets the name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "VirtualNetworkPeerings": [
                    {
                        "id": "Resource Id",
                        "properties": {
                            "allowVirtualNetworkAccess": "Gets or sets whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space",
                            "allowForwardedTraffic": "Gets or sets whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed",
                            "allowGatewayTransit": "Gets or sets if gatewayLinks can be used in remote virtual network’s link to this virtual network",
                            "useRemoteGateways": "Gets or sets if remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only 1 peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.",
                            "remoteVirtualNetwork": {
                                "id": "Resource Id"
                            },
                            "peeringState": "Gets the status of the virtual network peering",
                            "provisioningState": "Gets provisioning state of the resource"
                        },
                        "name": "Gets or sets the name of the resource that is unique within a resource group. This name can be used to access the resource",
                        "etag": "A unique read-only string that changes whenever the resource is updated"
                    }
                ],
                "resourceGuid": "Gets or sets resource guid property of the VirtualNetwork resource",
                "provisioningState": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
            },
            "etag": "Gets a unique read-only string that changes whenever the resource is updated"
        },
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworks",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks",
        "ApiVersion": "2016-09-01"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/CheckIPAddressAvailability",
        "ApiVersion": "2016-09-01"
    }
]
