[
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/containerServices",
        "ApiVersion": "2017-01-31"
    },
    {
        "MethodName": "CreateOrUpdate",
        "HttpMethod": "PUT",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
        "RequestBody": {
            "id": "(string)",
            "name": "(string)",
            "type": "(string)",
            "location": "(string)",
            "tags": {},
            "properties": {
                "provisioningState": "(string)",
                "orchestratorProfile": {
                    "orchestratorType": "(string)"
                },
                "customProfile": {
                    "orchestrator": "(string)"
                },
                "servicePrincipalProfile": {
                    "clientId": "(string)",
                    "secret": "(string)"
                },
                "masterProfile": {
                    "count": "(integer)",
                    "dnsPrefix": "(string)",
                    "fqdn": "(string)"
                },
                "agentPoolProfiles": [
                    {
                        "name": "(string)",
                        "count": "(integer)",
                        "vmSize": "(string)",
                        "dnsPrefix": "(string)",
                        "fqdn": "(string)"
                    }
                ],
                "windowsProfile": {
                    "adminUsername": "(string)",
                    "adminPassword": "(string)"
                },
                "linuxProfile": {
                    "adminUsername": "(string)",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "(string)"
                            }
                        ]
                    }
                },
                "diagnosticsProfile": {
                    "vmDiagnostics": {
                        "enabled": "(boolean)",
                        "storageUri": "(string)"
                    }
                }
            }
        },
        "RequestBodyDoc": {
            "id": "Resource Id",
            "name": "Resource name",
            "type": "Resource type",
            "location": "Resource location",
            "tags": {},
            "properties": {
                "provisioningState": "the current deployment or provisioning state, which only appears in the response.",
                "orchestratorProfile": {
                    "orchestratorType": "The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom."
                },
                "customProfile": {
                    "orchestrator": "The name of the custom orchestrator to use."
                },
                "servicePrincipalProfile": {
                    "clientId": "The ID for the service principal.",
                    "secret": "The secret password associated with the service principal."
                },
                "masterProfile": {
                    "count": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
                    "dnsPrefix": "DNS prefix to be used to create the FQDN for master.",
                    "fqdn": "FDQN for the master."
                },
                "agentPoolProfiles": [
                    {
                        "name": "Unique name of the agent pool profile in the context of the subscription and resource group.",
                        "count": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
                        "vmSize": "Size of agent VMs.",
                        "dnsPrefix": "DNS prefix to be used to create the FQDN for the agent pool.",
                        "fqdn": "FDQN for the agent pool."
                    }
                ],
                "windowsProfile": {
                    "adminUsername": "The administrator username to use for Windows VMs.",
                    "adminPassword": "The administrator password to use for Windows VMs."
                },
                "linuxProfile": {
                    "adminUsername": "The administrator username to use for Linux VMs.",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                            }
                        ]
                    }
                },
                "diagnosticsProfile": {
                    "vmDiagnostics": {
                        "enabled": "Whether the VM diagnostic agent is provisioned on the VM.",
                        "storageUri": "The URI of the storage account where diagnostics are stored."
                    }
                }
            }
        },
        "ApiVersion": "2017-01-31"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
        "ApiVersion": "2017-01-31"
    },
    {
        "MethodName": "Delete",
        "HttpMethod": "DELETE",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
        "ApiVersion": "2017-01-31"
    },
    {
        "MethodName": "Get",
        "HttpMethod": "GET",
        "Url": "https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices",
        "ApiVersion": "2017-01-31"
    }
]
